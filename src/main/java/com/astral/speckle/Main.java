package com.astral.speckle;

import java.awt.Component;
import java.awt.Desktop;
import java.io.IOException;
import java.util.Base64;
import javax.swing.JOptionPane;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import com.astral.internal.Constant;
import com.astral.internal.Function;
import com.astral.internal.SQLite;
import com.password4j.Password;

/**
 *
 * @author Astralsphere Arts
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        LoggedIn = false;
        SQLite.initConfigDB();
        if (Desktop.getDesktop().isSupported(Desktop.Action.APP_ABOUT)) {
            Desktop.getDesktop().setAboutHandler(e -> {
                About_ActionPerformed();
            });
        }
        try {
            SpaceMono = java.awt.Font.createFont(java.awt.Font.TRUETYPE_FONT, getClass().getResourceAsStream("/fonts/SpaceMono-Regular.ttf"));
        } catch (IOException | java.awt.FontFormatException ex) {
            JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
        }
        initComponents();
        Container_Deck = (java.awt.CardLayout)Container.getLayout();
        if ((SQLite.getConfigValue("Signed Up")).equals("False")) {
            SB_Home_Button.setEnabled(false);
            SB_About_Button.setEnabled(false);
            MB_About.setEnabled(false);
            Container_Deck.show(Container, "signUpMain");
        } else Container_Deck.show(Container, "signIn");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SideBar = new javax.swing.JToolBar();
        SB_Filler_01 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        SB_Home_Button = new javax.swing.JButton();
        SB_Filler_02 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        SB_Invoicing_Button = new javax.swing.JButton();
        SB_Filler_03 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        SB_Inventory_Button = new javax.swing.JButton();
        SB_Filler_04 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        SB_Settings_Button = new javax.swing.JButton();
        SB_Filler_05 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        SB_About_Button = new javax.swing.JButton();
        SB_Filler_06 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        SB_SignOut_Button = new javax.swing.JButton();
        SB_Filler_07 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        Container = new javax.swing.JPanel();
        SignIn = new javax.swing.JPanel();
        SI_Form = new javax.swing.JPanel();
        SI_Logo_01 = new javax.swing.JLabel();
        SI_Heading = new javax.swing.JLabel();
        SI_Paragraph = new javax.swing.JLabel();
        SI_Sub_Heading = new javax.swing.JLabel();
        SI_Username = new javax.swing.JTextField();
        SI_Password = new javax.swing.JPasswordField();
        SI_Button = new javax.swing.JButton();
        SI_Logo_02 = new javax.swing.JLabel();
        SignUp_Main = new javax.swing.JPanel();
        SM_Heading = new javax.swing.JLabel();
        SM_Sub_Heading = new javax.swing.JLabel();
        SM_Paragraph_01 = new javax.swing.JLabel();
        SM_Paragraph_02 = new javax.swing.JLabel();
        SM_User_Details = new javax.swing.JPanel();
        SM_Username_Label = new javax.swing.JLabel();
        SM_Username = new javax.swing.JTextField();
        SM_Create_Password_Label = new javax.swing.JLabel();
        SM_Create_Password = new javax.swing.JPasswordField();
        SM_Confirm_Password_Label = new javax.swing.JLabel();
        SM_Confirm_Password = new javax.swing.JPasswordField();
        SM_Next_Button = new javax.swing.JButton();
        SignUp_Details = new javax.swing.JPanel();
        SD_Heading = new javax.swing.JLabel();
        SD_Paragraph = new javax.swing.JLabel();
        SD_Business_Details = new javax.swing.JPanel();
        SD_Business_Name_Label = new javax.swing.JLabel();
        SD_Business_Name = new javax.swing.JTextField();
        SD_Contact_Number_Label = new javax.swing.JLabel();
        SD_Country_Code = new javax.swing.JComboBox<>();
        SD_Contact_Number = new javax.swing.JTextField();
        SD_Email_Address_Label = new javax.swing.JLabel();
        SD_Email_Address = new javax.swing.JTextField();
        SD_Business_Location_Label = new javax.swing.JLabel();
        SD_Business_Location = new javax.swing.JTextField();
        SD_Back_Button = new javax.swing.JButton();
        SD_SignUp_Button = new javax.swing.JButton();
        Verify_Details = new javax.swing.JPanel();
        VD_Heading = new javax.swing.JLabel();
        VD_Username_Label = new javax.swing.JLabel();
        VD_Username = new javax.swing.JLabel();
        VD_Business_Name_Label = new javax.swing.JLabel();
        VD_Business_Name = new javax.swing.JLabel();
        VD_Contact_Number_Label = new javax.swing.JLabel();
        VD_Contact_Number = new javax.swing.JLabel();
        VD_Email_Address_Label = new javax.swing.JLabel();
        VD_Email_Address = new javax.swing.JLabel();
        VD_Business_Location_Label = new javax.swing.JLabel();
        VD_Business_Location = new javax.swing.JLabel();
        VD_Recovery_Key_Heading = new javax.swing.JLabel();
        VD_Recovery_Key_Paragraph = new javax.swing.JLabel();
        VD_Recovery_Key = new javax.swing.JTextField();
        VD_Finish_Button = new javax.swing.JButton();
        VD_Finish_Filler = new javax.swing.Box.Filler(new java.awt.Dimension(16, 0), new java.awt.Dimension(16, 0), new java.awt.Dimension(16, 32767));
        Forgot_Password = new javax.swing.JPanel();
        FP_Heading = new javax.swing.JLabel();
        FP_Paragraph = new javax.swing.JLabel();
        FP_New_Details = new javax.swing.JPanel();
        FP_Recovery_Key_Label = new javax.swing.JLabel();
        FP_Recovery_Key = new javax.swing.JTextField();
        FP_New_Password_Label = new javax.swing.JLabel();
        FP_New_Password = new javax.swing.JPasswordField();
        FP_Confirm_Password_Label = new javax.swing.JLabel();
        FP_Confirm_Password = new javax.swing.JPasswordField();
        FP_Cancel_Button = new javax.swing.JButton();
        FP_Reset_Button = new javax.swing.JButton();
        Home = new javax.swing.JPanel();
        HOME_Banner = new javax.swing.JPanel();
        HOME_Main_Heading = new javax.swing.JLabel();
        HOME_Help = new javax.swing.JPanel();
        HOME_Help_Heading = new javax.swing.JLabel();
        HOME_Help_Paragraph = new javax.swing.JLabel();
        HOME_Help_Content = new javax.swing.JLabel();
        HOME_Low_Stock = new javax.swing.JPanel();
        HOME_Low_Stock_Heading = new javax.swing.JLabel();
        HOME_Low_Stock_Paragraph = new javax.swing.JLabel();
        HOME_Product_One_Label = new javax.swing.JLabel();
        HOME_Product_One_Quantity = new javax.swing.JLabel();
        HOME_Product_Two_Label = new javax.swing.JLabel();
        HOME_Product_Two_Quantity = new javax.swing.JLabel();
        HOME_Product_Three_Label = new javax.swing.JLabel();
        HOME_Product_Three_Quantity = new javax.swing.JLabel();
        HOME_Product_Four_Label = new javax.swing.JLabel();
        HOME_Product_Four_Quantity = new javax.swing.JLabel();
        HOME_Product_Five_Label = new javax.swing.JLabel();
        HOME_Product_Five_Quantity = new javax.swing.JLabel();
        Invoice = new javax.swing.JPanel();
        INVO_Heading = new javax.swing.JLabel();
        INVO_New_Invoice_Button = new javax.swing.JButton();
        INVO_Table_Container = new javax.swing.JScrollPane();
        INVO_Table = new javax.swing.JTable();
        INVO_View_Button = new javax.swing.JButton();
        INVO_Remove_Button = new javax.swing.JButton();
        INVO_Export_Button = new javax.swing.JButton();
        New_Invoice = new javax.swing.JPanel();
        NI_Heading = new javax.swing.JLabel();
        NI_Customer_Details = new javax.swing.JPanel();
        NI_Customer_Name_Label = new javax.swing.JLabel();
        NI_Customer_Name = new javax.swing.JTextField();
        NI_Customer_Contact_Label = new javax.swing.JLabel();
        NI_Customer_Contact = new javax.swing.JTextField();
        NI_Customer_Address_Label = new javax.swing.JLabel();
        NI_Customer_Address = new javax.swing.JTextField();
        NI_Table_Container = new javax.swing.JScrollPane();
        NI_Table = new javax.swing.JTable();
        NI_Cancel_Button = new javax.swing.JButton();
        NI_Create_Button = new javax.swing.JButton();
        Inventory = new javax.swing.JPanel();
        INV_Heading = new javax.swing.JLabel();
        INV_Table_Container = new javax.swing.JScrollPane();
        INV_Table = new javax.swing.JTable();
        INV_Add_Button = new javax.swing.JButton();
        INV_Edit_Button = new javax.swing.JButton();
        INV_Remove_Button = new javax.swing.JButton();
        INV_Update_Button = new javax.swing.JButton();
        INV_Import_Button = new javax.swing.JButton();
        INV_Export_Button = new javax.swing.JButton();
        New_Product = new javax.swing.JPanel();
        NP_Heading = new javax.swing.JLabel();
        NP_Product_Details = new javax.swing.JPanel();
        NP_Product_Name_Label = new javax.swing.JLabel();
        NP_Product_Name = new javax.swing.JTextField();
        NP_Price_Label = new javax.swing.JLabel();
        NP_Price = new javax.swing.JTextField();
        NP_GST_Rate_Label = new javax.swing.JLabel();
        NP_GST_Rate = new javax.swing.JTextField();
        NP_Available_Quantity_Label = new javax.swing.JLabel();
        NP_Available_Quantity = new javax.swing.JTextField();
        NP_Cancel_Button = new javax.swing.JButton();
        NP_Finish_Button = new javax.swing.JButton();
        Settings = new javax.swing.JPanel();
        SE_TabbedPane = new javax.swing.JTabbedPane();
        SE_User_Tab = new javax.swing.JPanel();
        SE_Username = new javax.swing.JPanel();
        SE_Current_Username_Label = new javax.swing.JLabel();
        SE_Current_Username = new javax.swing.JTextField();
        SE_New_Username_Label = new javax.swing.JLabel();
        SE_New_Username = new javax.swing.JTextField();
        SE_Change_Username_Button = new javax.swing.JButton();
        SE_Password = new javax.swing.JPanel();
        SE_Current_Password_Label = new javax.swing.JLabel();
        SE_Current_Password = new javax.swing.JPasswordField();
        SE_New_Password_Label = new javax.swing.JLabel();
        SE_New_Password = new javax.swing.JPasswordField();
        SE_Confirm_Password_Label = new javax.swing.JLabel();
        SE_Confirm_Password = new javax.swing.JPasswordField();
        SE_Change_Password_Button = new javax.swing.JButton();
        SE_Business_Tab = new javax.swing.JPanel();
        SE_Business_Name = new javax.swing.JPanel();
        SE_Current_Business_Label = new javax.swing.JLabel();
        SE_Current_Business_Name = new javax.swing.JTextField();
        SE_New_Business_Label = new javax.swing.JLabel();
        SE_New_Business_Name = new javax.swing.JTextField();
        SE_Contact_Number = new javax.swing.JPanel();
        SE_Current_Contact_Label = new javax.swing.JLabel();
        SE_Current_Contact_Number = new javax.swing.JTextField();
        SE_New_Contact_Label = new javax.swing.JLabel();
        SE_New_Country_Code = new javax.swing.JComboBox<>();
        SE_New_Contact_Number = new javax.swing.JTextField();
        SE_Email_Address = new javax.swing.JPanel();
        SE_Current_Email_Label = new javax.swing.JLabel();
        SE_Current_Email_Address = new javax.swing.JTextField();
        SE_New_Email_Label = new javax.swing.JLabel();
        SE_New_Email_Address = new javax.swing.JTextField();
        SE_Business_Location = new javax.swing.JPanel();
        SE_Current_Address_Label = new javax.swing.JLabel();
        SE_Current_Address = new javax.swing.JTextField();
        SE_New_Address_Label = new javax.swing.JLabel();
        SE_New_Address = new javax.swing.JTextField();
        SE_Save_Changes_Button = new javax.swing.JButton();
        About = new javax.swing.JPanel();
        AB_Logo = new javax.swing.JLabel();
        AB_Heading = new javax.swing.JLabel();
        AB_Version_Label = new javax.swing.JLabel();
        AB_TabbedPane = new javax.swing.JTabbedPane();
        AB_Authors_Tab = new javax.swing.JPanel();
        AB_Authors_Container = new javax.swing.JScrollPane();
        AB_Authors_Text = new javax.swing.JTextArea();
        AB_License_Tab = new javax.swing.JPanel();
        AB_License_Container = new javax.swing.JScrollPane();
        AB_License_Text = new javax.swing.JTextArea();
        AB_Credits_Tab = new javax.swing.JPanel();
        AB_Credits_Container = new javax.swing.JScrollPane();
        AB_Credits_Text = new javax.swing.JTextArea();
        MenuBar = new javax.swing.JMenuBar();
        MB_File_Menu = new javax.swing.JMenu();
        MB_New_Invoice = new javax.swing.JMenuItem();
        MB_Invoice_History = new javax.swing.JMenuItem();
        MB_Inventory = new javax.swing.JMenuItem();
        MB_Separator_01 = new javax.swing.JPopupMenu.Separator();
        MB_Sign_Out = new javax.swing.JMenuItem();
        MB_Separator_02 = new javax.swing.JPopupMenu.Separator();
        MB_Exit = new javax.swing.JMenuItem();
        MB_Inventory_Menu = new javax.swing.JMenu();
        MB_INV_Add = new javax.swing.JMenuItem();
        MB_INV_Edit = new javax.swing.JMenuItem();
        MB_INV_Remove = new javax.swing.JMenuItem();
        MB_Separator_03 = new javax.swing.JPopupMenu.Separator();
        MB_INV_Update = new javax.swing.JMenuItem();
        MB_INV_Import = new javax.swing.JMenuItem();
        MB_Tools_Menu = new javax.swing.JMenu();
        MB_Export_Invoice = new javax.swing.JMenuItem();
        MB_Export_Inventory = new javax.swing.JMenuItem();
        MB_Separator_04 = new javax.swing.JPopupMenu.Separator();
        MB_Settings = new javax.swing.JMenuItem();
        MB_Help_Menu = new javax.swing.JMenu();
        MB_About = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Speckle");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/images/app-icon-256x256.png")).getImage());
        setMinimumSize(new java.awt.Dimension(1100, 650));

        SideBar.setBackground(new java.awt.Color(255, 255, 255));
        SideBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        SideBar.setRollover(true);
        SideBar.add(SB_Filler_01);

        SB_Home_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/house_3d.png"))); // NOI18N
        SB_Home_Button.setToolTipText("Home");
        SB_Home_Button.setFocusable(false);
        SB_Home_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SB_Home_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SB_Home_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SB_Home_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(SB_Home_Button);
        SideBar.add(SB_Filler_02);

        SB_Invoicing_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/scroll_3d.png"))); // NOI18N
        SB_Invoicing_Button.setToolTipText("Invoicing");
        SB_Invoicing_Button.setEnabled(false);
        SB_Invoicing_Button.setFocusable(false);
        SB_Invoicing_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SB_Invoicing_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SB_Invoicing_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SB_Invoicing_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(SB_Invoicing_Button);
        SideBar.add(SB_Filler_03);

        SB_Inventory_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/package_3d.png"))); // NOI18N
        SB_Inventory_Button.setToolTipText("Inventory");
        SB_Inventory_Button.setEnabled(false);
        SB_Inventory_Button.setFocusable(false);
        SB_Inventory_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SB_Inventory_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SB_Inventory_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SB_Inventory_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(SB_Inventory_Button);
        SideBar.add(SB_Filler_04);

        SB_Settings_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gear_3d.png"))); // NOI18N
        SB_Settings_Button.setToolTipText("Settings");
        SB_Settings_Button.setEnabled(false);
        SB_Settings_Button.setFocusable(false);
        SB_Settings_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SB_Settings_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SB_Settings_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SB_Settings_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(SB_Settings_Button);
        SideBar.add(SB_Filler_05);

        SB_About_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bubbles_3d.png"))); // NOI18N
        SB_About_Button.setToolTipText("About");
        SB_About_Button.setFocusable(false);
        SB_About_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SB_About_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SB_About_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SB_About_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(SB_About_Button);
        SideBar.add(SB_Filler_06);

        SB_SignOut_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/high_voltage_3d.png"))); // NOI18N
        SB_SignOut_Button.setToolTipText("Sign Out");
        SB_SignOut_Button.setEnabled(false);
        SB_SignOut_Button.setFocusable(false);
        SB_SignOut_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SB_SignOut_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SB_SignOut_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SB_SignOut_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(SB_SignOut_Button);
        SideBar.add(SB_Filler_07);

        Container.setLayout(new java.awt.CardLayout());

        SI_Logo_01.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/app-logo-large.png"))); // NOI18N

        SI_Heading.setFont(SI_Heading.getFont().deriveFont(SI_Heading.getFont().getSize()+18f));
        SI_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SI_Heading.setText("Welcome To Speckle!");
        SI_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SI_Paragraph.setFont(SI_Paragraph.getFont().deriveFont(SI_Paragraph.getFont().getSize()+2f));
        SI_Paragraph.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SI_Paragraph.setText("A Simple Invoicing and Inventory Management System");
        SI_Paragraph.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SI_Sub_Heading.setFont(SI_Sub_Heading.getFont().deriveFont(SI_Sub_Heading.getFont().getSize()+6f));
        SI_Sub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SI_Sub_Heading.setText("Please Sign In ");
        SI_Sub_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SI_Username.setFont(SI_Username.getFont().deriveFont(SI_Username.getFont().getSize()+2f));
        SI_Username.putClientProperty("JTextField.placeholderText", "Username");
        SI_Username.putClientProperty("JTextField.padding", new java.awt.Insets(0, 10, 0, 10));
        SI_Username.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SI_UsernameKeyPressed(evt);
            }
        });

        SI_Password.setFont(SI_Password.getFont().deriveFont(SI_Password.getFont().getSize()+2f));
        SI_Password.putClientProperty("JTextField.placeholderText", "Password");
        SI_Password.putClientProperty("JTextField.padding", new java.awt.Insets(0, 10, 0, 10));
        SI_Password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SI_PasswordKeyPressed(evt);
            }
        });

        SI_Button.setText("Sign In");
        SI_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SI_ButtonActionPerformed(evt);
            }
        });

        SI_Logo_02.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/app-logo-large-flipped.png"))); // NOI18N

        javax.swing.GroupLayout SI_FormLayout = new javax.swing.GroupLayout(SI_Form);
        SI_Form.setLayout(SI_FormLayout);
        SI_FormLayout.setHorizontalGroup(
            SI_FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SI_FormLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SI_Logo_01)
                .addGroup(SI_FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SI_FormLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(SI_FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SI_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SI_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SI_FormLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(SI_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SI_FormLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SI_FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SI_Sub_Heading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SI_Heading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SI_Paragraph, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SI_Logo_02)
                .addGap(30, 30, 30))
        );
        SI_FormLayout.setVerticalGroup(
            SI_FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SI_FormLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SI_FormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SI_Logo_02)
                    .addComponent(SI_Logo_01)
                    .addGroup(SI_FormLayout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(SI_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SI_Paragraph)
                        .addGap(29, 29, 29)
                        .addComponent(SI_Sub_Heading)
                        .addGap(18, 18, 18)
                        .addComponent(SI_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SI_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SI_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout SignInLayout = new javax.swing.GroupLayout(SignIn);
        SignIn.setLayout(SignInLayout);
        SignInLayout.setHorizontalGroup(
            SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignInLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SI_Form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SignInLayout.setVerticalGroup(
            SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignInLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SI_Form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Container.add(SignIn, "signIn");

        SM_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 30)); // NOI18N
        SM_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SM_Heading.setText("Welcome To Speckle!");
        SM_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SM_Sub_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SM_Sub_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SM_Sub_Heading.setText("A Simple Invoicing and Inventory Management System");
        SM_Sub_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SM_Paragraph_01.setFont(SM_Paragraph_01.getFont().deriveFont(SM_Paragraph_01.getFont().getSize()+1f));
        SM_Paragraph_01.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SM_Paragraph_01.setText("Since this is your first time using Speckle, we need some details to set things up for you.");
        SM_Paragraph_01.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SM_Paragraph_02.setFont(SM_Paragraph_02.getFont().deriveFont(SM_Paragraph_02.getFont().getSize()+1f));
        SM_Paragraph_02.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SM_Paragraph_02.setText("First, create a Username and Password for yourself that you'll be using every time you use Speckle.");
        SM_Paragraph_02.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SM_User_Details.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SM_Username_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SM_Username_Label.setText("Your Username");
        SM_Username_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SM_Username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SM_Create_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SM_Create_Password_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        SM_Create_Password_Label.setText("Create Password");
        SM_Create_Password_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SM_Create_Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SM_Confirm_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SM_Confirm_Password_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        SM_Confirm_Password_Label.setText("Confirm Password");
        SM_Confirm_Password_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SM_Confirm_Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout SM_User_DetailsLayout = new javax.swing.GroupLayout(SM_User_Details);
        SM_User_Details.setLayout(SM_User_DetailsLayout);
        SM_User_DetailsLayout.setHorizontalGroup(
            SM_User_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SM_User_DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SM_User_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SM_User_DetailsLayout.createSequentialGroup()
                        .addGroup(SM_User_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SM_Create_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SM_Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SM_User_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SM_Create_Password, javax.swing.GroupLayout.DEFAULT_SIZE, 548, Short.MAX_VALUE)
                            .addComponent(SM_Confirm_Password)))
                    .addGroup(SM_User_DetailsLayout.createSequentialGroup()
                        .addComponent(SM_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SM_Username)))
                .addContainerGap())
        );
        SM_User_DetailsLayout.setVerticalGroup(
            SM_User_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SM_User_DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SM_User_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SM_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SM_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SM_User_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SM_Create_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SM_Create_Password))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SM_User_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SM_Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SM_Confirm_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SM_Next_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        SM_Next_Button.setText("Next");
        SM_Next_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SM_Next_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SignUp_MainLayout = new javax.swing.GroupLayout(SignUp_Main);
        SignUp_Main.setLayout(SignUp_MainLayout);
        SignUp_MainLayout.setHorizontalGroup(
            SignUp_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_MainLayout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addGroup(SignUp_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(SM_Paragraph_01, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SM_Sub_Heading, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SM_Heading, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SM_Paragraph_02, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addComponent(SM_User_Details, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SM_Next_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        SignUp_MainLayout.setVerticalGroup(
            SignUp_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_MainLayout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(SM_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SM_Sub_Heading)
                .addGap(32, 32, 32)
                .addComponent(SM_Paragraph_01)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SM_Paragraph_02)
                .addGap(30, 30, 30)
                .addComponent(SM_User_Details, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SM_Next_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        Container.add(SignUp_Main, "signUpMain");

        SD_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        SD_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SD_Heading.setText("Just a little more and you'll be all ready to go.");
        SD_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SD_Paragraph.setFont(SD_Paragraph.getFont().deriveFont(SD_Paragraph.getFont().getSize()+1f));
        SD_Paragraph.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SD_Paragraph.setText("Now, please provide some details about your Business. This information will be used for the Invoices you generate using Speckle.");
        SD_Paragraph.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SD_Business_Details.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SD_Business_Name_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SD_Business_Name_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        SD_Business_Name_Label.setText("Business Name");
        SD_Business_Name_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SD_Business_Name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SD_Contact_Number_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SD_Contact_Number_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        SD_Contact_Number_Label.setText("Contact Number");
        SD_Contact_Number_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SD_Country_Code.setMaximumRowCount(5);
        SD_Country_Code.setModel(new javax.swing.DefaultComboBoxModel<>(Constant.COUNTRY_CODES));
        SD_Country_Code.setSelectedItem("+91");

        SD_Contact_Number.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SD_Contact_Number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SD_Contact_NumberKeyPressed(evt);
            }
        });

        SD_Email_Address_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SD_Email_Address_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        SD_Email_Address_Label.setText("Email Address");
        SD_Email_Address_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SD_Email_Address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SD_Business_Location_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SD_Business_Location_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        SD_Business_Location_Label.setText("Business Location (Address)");
        SD_Business_Location_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SD_Business_Location.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout SD_Business_DetailsLayout = new javax.swing.GroupLayout(SD_Business_Details);
        SD_Business_Details.setLayout(SD_Business_DetailsLayout);
        SD_Business_DetailsLayout.setHorizontalGroup(
            SD_Business_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SD_Business_DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SD_Business_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(SD_Business_Location_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SD_Email_Address_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SD_Contact_Number_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SD_Business_Name_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SD_Business_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SD_Business_Name, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SD_Email_Address)
                    .addComponent(SD_Business_Location)
                    .addGroup(SD_Business_DetailsLayout.createSequentialGroup()
                        .addComponent(SD_Country_Code, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SD_Contact_Number)))
                .addContainerGap())
        );
        SD_Business_DetailsLayout.setVerticalGroup(
            SD_Business_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SD_Business_DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SD_Business_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SD_Business_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SD_Business_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SD_Business_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SD_Contact_Number_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SD_Contact_Number, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(SD_Country_Code))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SD_Business_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SD_Email_Address_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SD_Email_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SD_Business_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SD_Business_Location_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SD_Business_Location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        SD_Back_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        SD_Back_Button.setText("Back");
        SD_Back_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SD_Back_ButtonActionPerformed(evt);
            }
        });

        SD_SignUp_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        SD_SignUp_Button.setText("Sign Up");
        SD_SignUp_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SD_SignUp_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SignUp_DetailsLayout = new javax.swing.GroupLayout(SignUp_Details);
        SignUp_Details.setLayout(SignUp_DetailsLayout);
        SignUp_DetailsLayout.setHorizontalGroup(
            SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                        .addComponent(SD_Back_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SD_SignUp_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SD_Paragraph, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SD_Heading, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SD_Business_Details, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        SignUp_DetailsLayout.setVerticalGroup(
            SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                .addContainerGap(98, Short.MAX_VALUE)
                .addComponent(SD_Heading)
                .addGap(18, 18, 18)
                .addComponent(SD_Paragraph, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(SD_Business_Details, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SD_Back_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SD_SignUp_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(147, Short.MAX_VALUE))
        );

        Container.add(SignUp_Details, "signUpDetails");

        VD_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        VD_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VD_Heading.setText("Please Verify Your Details");
        VD_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        VD_Username_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        VD_Username_Label.setText("User Name");

        VD_Username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        VD_Business_Name_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        VD_Business_Name_Label.setText("Business Name");

        VD_Business_Name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        VD_Contact_Number_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        VD_Contact_Number_Label.setText("Contact Number");

        VD_Contact_Number.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        VD_Email_Address_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        VD_Email_Address_Label.setText("Email Address");

        VD_Email_Address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        VD_Business_Location_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        VD_Business_Location_Label.setText("Business Location");

        VD_Business_Location.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        VD_Recovery_Key_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        VD_Recovery_Key_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VD_Recovery_Key_Heading.setText("Recovery Key");
        VD_Recovery_Key_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        VD_Recovery_Key_Paragraph.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        VD_Recovery_Key_Paragraph.setText("Following Is Your Recovery Key Code For Password Recovery. Please Keep This Code Safe and Do not Share This Code With Anyone.");

        VD_Recovery_Key.setEditable(false);
        VD_Recovery_Key.setBackground(new java.awt.Color(255, 255, 255));
        VD_Recovery_Key.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        VD_Finish_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        VD_Finish_Button.setText("Finish");
        VD_Finish_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VD_Finish_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Verify_DetailsLayout = new javax.swing.GroupLayout(Verify_Details);
        Verify_Details.setLayout(Verify_DetailsLayout);
        Verify_DetailsLayout.setHorizontalGroup(
            Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Verify_DetailsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(VD_Recovery_Key)
                    .addComponent(VD_Recovery_Key_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(VD_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
                    .addComponent(VD_Recovery_Key_Paragraph, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Verify_DetailsLayout.createSequentialGroup()
                        .addComponent(VD_Business_Location_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Verify_DetailsLayout.createSequentialGroup()
                        .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(VD_Username_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VD_Business_Name_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VD_Email_Address_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VD_Contact_Number_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(VD_Username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VD_Business_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VD_Contact_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VD_Email_Address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VD_Business_Location, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(80, 80, 80))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Verify_DetailsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(VD_Finish_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VD_Finish_Filler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Verify_DetailsLayout.setVerticalGroup(
            Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Verify_DetailsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(VD_Heading)
                .addGap(30, 30, 30)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VD_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VD_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VD_Business_Name_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(VD_Business_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VD_Contact_Number_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(VD_Contact_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VD_Email_Address_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(VD_Email_Address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VD_Business_Location_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(VD_Business_Location, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(VD_Recovery_Key_Heading)
                .addGap(18, 18, 18)
                .addComponent(VD_Recovery_Key_Paragraph, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(VD_Recovery_Key, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(VD_Finish_Button, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(VD_Finish_Filler, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        Container.add(Verify_Details, "verifyDetails");

        FP_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 24)); // NOI18N
        FP_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FP_Heading.setText("Forgot Password");
        FP_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        FP_Paragraph.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        FP_Paragraph.setText("<html><p style=\"text-align: center;\">If You've Forgotten Your Password. Then Enter the Recovery Code that had been Given to You on the First Use and then You can create a New Password.</p></html>");

        FP_New_Details.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        FP_Recovery_Key_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        FP_Recovery_Key_Label.setText("Recovery Key");

        FP_Recovery_Key.setPreferredSize(new java.awt.Dimension(7, 26));

        FP_New_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        FP_New_Password_Label.setText("New Password");

        FP_New_Password.setPreferredSize(new java.awt.Dimension(7, 26));

        FP_Confirm_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        FP_Confirm_Password_Label.setText("Confirm Password");

        FP_Confirm_Password.setPreferredSize(new java.awt.Dimension(7, 26));

        javax.swing.GroupLayout FP_New_DetailsLayout = new javax.swing.GroupLayout(FP_New_Details);
        FP_New_Details.setLayout(FP_New_DetailsLayout);
        FP_New_DetailsLayout.setHorizontalGroup(
            FP_New_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FP_New_DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FP_New_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FP_New_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FP_Recovery_Key_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FP_Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FP_New_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(FP_New_Password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FP_Recovery_Key, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 448, Short.MAX_VALUE)
                    .addComponent(FP_Confirm_Password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FP_New_DetailsLayout.setVerticalGroup(
            FP_New_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FP_New_DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FP_New_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FP_Recovery_Key_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FP_Recovery_Key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FP_New_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FP_New_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FP_New_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(FP_New_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FP_Confirm_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FP_Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        FP_Cancel_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        FP_Cancel_Button.setText("Cancel");
        FP_Cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FP_Cancel_ButtonActionPerformed(evt);
            }
        });

        FP_Reset_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        FP_Reset_Button.setText("Reset");
        FP_Reset_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FP_Reset_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Forgot_PasswordLayout = new javax.swing.GroupLayout(Forgot_Password);
        Forgot_Password.setLayout(Forgot_PasswordLayout);
        Forgot_PasswordLayout.setHorizontalGroup(
            Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Forgot_PasswordLayout.createSequentialGroup()
                .addContainerGap(162, Short.MAX_VALUE)
                .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Forgot_PasswordLayout.createSequentialGroup()
                        .addComponent(FP_Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 360, Short.MAX_VALUE)
                        .addComponent(FP_Reset_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(FP_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FP_Paragraph, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(FP_New_Details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(188, Short.MAX_VALUE))
        );
        Forgot_PasswordLayout.setVerticalGroup(
            Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Forgot_PasswordLayout.createSequentialGroup()
                .addContainerGap(101, Short.MAX_VALUE)
                .addComponent(FP_Heading)
                .addGap(18, 18, 18)
                .addComponent(FP_Paragraph, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(FP_New_Details, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FP_Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FP_Reset_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(166, Short.MAX_VALUE))
        );

        Container.add(Forgot_Password, "forgotPassword");
        Forgot_Password.getAccessibleContext().setAccessibleName("");

        HOME_Banner.setBackground(new java.awt.Color(253, 253, 253));
        HOME_Banner.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(180, 180, 180), 1, true));

        HOME_Main_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 30)); // NOI18N
        HOME_Main_Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        HOME_Main_Heading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/app-logo-small.png"))); // NOI18N
        HOME_Main_Heading.setText("Speckle: Simple Invoicing & Inventory Management");

        javax.swing.GroupLayout HOME_BannerLayout = new javax.swing.GroupLayout(HOME_Banner);
        HOME_Banner.setLayout(HOME_BannerLayout);
        HOME_BannerLayout.setHorizontalGroup(
            HOME_BannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HOME_BannerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HOME_Main_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        HOME_BannerLayout.setVerticalGroup(
            HOME_BannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HOME_BannerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HOME_Main_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addContainerGap())
        );

        HOME_Help.setBackground(new java.awt.Color(248, 248, 248));
        HOME_Help.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(180, 180, 180), 1, true));

        HOME_Help_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        HOME_Help_Heading.setText("Quick Start Guide");

        HOME_Help_Content.setText("<html><ol style=\"margin: 0 0 0 20;\">\n<li style=\"padding: 4;\">The First Tab is <b>Home</b> which has two Sections one is Quick Start Guide(This One) and second one is has Information\nabout Products with Low amount Stocks in the Inventory.</li>\n<li style=\"padding: 4;\">The Second Tab is <b>Invoicing</b> through which you can create new Invoices or can view previously created Invoices.</li>\n<li style=\"padding: 4;\">The Third Tab is <b>Inventory</b> where you can add or remove Products from Speckle's Inventory.</li>\n<li style=\"padding: 4;\">The Forth Tab is <b>Settings</b> where you can change your Login Credentials and the information related to your\nBusiness that gets printed on your Invoices.</li>\n<li style=\"padding: 4;\">The Last Tab is <b>About</b> which has three Sections Authors, License, Credits they contain a List of Developers who\nContributed to Speckle, the EULA and Credits to the External Libraries we used.</li>\n</ol></html>");
        HOME_Help_Content.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        HOME_Help_Content.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout HOME_HelpLayout = new javax.swing.GroupLayout(HOME_Help);
        HOME_Help.setLayout(HOME_HelpLayout);
        HOME_HelpLayout.setHorizontalGroup(
            HOME_HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HOME_HelpLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(HOME_HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HOME_Help_Paragraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HOME_Help_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HOME_Help_Content, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HOME_HelpLayout.setVerticalGroup(
            HOME_HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HOME_HelpLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(HOME_Help_Heading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HOME_Help_Paragraph, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HOME_Help_Content, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        HOME_Low_Stock.setBackground(new java.awt.Color(248, 248, 248));
        HOME_Low_Stock.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(180, 180, 180), 1, true));

        HOME_Low_Stock_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        HOME_Low_Stock_Heading.setText("Low Stock");

        HOME_Low_Stock_Paragraph.setText("<html><p>The following five Products have the least amount of Stock available. If you think you might run out of stock for a Product then please Restock.</p></html>");

        HOME_Product_One_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        HOME_Product_One_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        HOME_Product_One_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HOME_Product_One_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        HOME_Product_Two_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        HOME_Product_Two_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        HOME_Product_Two_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HOME_Product_Two_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        HOME_Product_Three_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        HOME_Product_Three_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        HOME_Product_Three_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HOME_Product_Three_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        HOME_Product_Four_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        HOME_Product_Four_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        HOME_Product_Four_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HOME_Product_Four_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        HOME_Product_Five_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        HOME_Product_Five_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        HOME_Product_Five_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        HOME_Product_Five_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout HOME_Low_StockLayout = new javax.swing.GroupLayout(HOME_Low_Stock);
        HOME_Low_Stock.setLayout(HOME_Low_StockLayout);
        HOME_Low_StockLayout.setHorizontalGroup(
            HOME_Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HOME_Low_StockLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(HOME_Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(HOME_Low_StockLayout.createSequentialGroup()
                        .addComponent(HOME_Product_Five_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HOME_Product_Five_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HOME_Low_StockLayout.createSequentialGroup()
                        .addComponent(HOME_Product_Four_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HOME_Product_Four_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HOME_Low_StockLayout.createSequentialGroup()
                        .addComponent(HOME_Product_Three_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HOME_Product_Three_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(HOME_Low_StockLayout.createSequentialGroup()
                        .addComponent(HOME_Product_Two_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HOME_Product_Two_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(HOME_Low_Stock_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(HOME_Low_StockLayout.createSequentialGroup()
                        .addComponent(HOME_Product_One_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HOME_Product_One_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(HOME_Low_Stock_Paragraph, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        HOME_Low_StockLayout.setVerticalGroup(
            HOME_Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HOME_Low_StockLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(HOME_Low_Stock_Heading)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(HOME_Low_Stock_Paragraph, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(HOME_Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HOME_Product_One_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOME_Product_One_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HOME_Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HOME_Product_Two_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOME_Product_Two_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HOME_Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HOME_Product_Three_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOME_Product_Three_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HOME_Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HOME_Product_Four_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOME_Product_Four_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HOME_Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HOME_Product_Five_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HOME_Product_Five_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout HomeLayout = new javax.swing.GroupLayout(Home);
        Home.setLayout(HomeLayout);
        HomeLayout.setHorizontalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomeLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HOME_Banner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLayout.createSequentialGroup()
                        .addComponent(HOME_Help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(HOME_Low_Stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        HomeLayout.setVerticalGroup(
            HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HomeLayout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(HOME_Banner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(HomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HOME_Low_Stock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HOME_Help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        Container.add(Home, "home");

        INVO_Heading.setFont(INVO_Heading.getFont().deriveFont(INVO_Heading.getFont().getSize()+12f));
        INVO_Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        INVO_Heading.setText("Invoice");
        INVO_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        INVO_New_Invoice_Button.setFont(INVO_New_Invoice_Button.getFont().deriveFont((float)14));
        INVO_New_Invoice_Button.setText("New Invoice");
        INVO_New_Invoice_Button.setToolTipText("Generate a New Invoice");
        INVO_New_Invoice_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INVO_New_Invoice_ButtonActionPerformed(evt);
            }
        });

        INVO_Table.setAutoCreateRowSorter(true);
        INVO_Table.setShowGrid(true);
        INVO_Table.getTableHeader().setReorderingAllowed(false);
        INVO_Table_Container.setViewportView(INVO_Table);

        INVO_View_Button.setText("View Invoice");
        INVO_View_Button.setToolTipText("View Selected Invoice from Invoice List");
        INVO_View_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INVO_View_ButtonActionPerformed(evt);
            }
        });

        INVO_Remove_Button.setText("Remove");
        INVO_Remove_Button.setToolTipText("Remove Selected Invoices from Invoice List");
        INVO_Remove_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INVO_Remove_ButtonActionPerformed(evt);
            }
        });

        INVO_Export_Button.setText("Export");
        INVO_Export_Button.setToolTipText("Export Invoice List to a CSV File");
        INVO_Export_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INVO_Export_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InvoiceLayout = new javax.swing.GroupLayout(Invoice);
        Invoice.setLayout(InvoiceLayout);
        InvoiceLayout.setHorizontalGroup(
            InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InvoiceLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InvoiceLayout.createSequentialGroup()
                        .addComponent(INVO_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(INVO_New_Invoice_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(InvoiceLayout.createSequentialGroup()
                        .addComponent(INVO_View_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(INVO_Remove_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(INVO_Export_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(INVO_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        InvoiceLayout.setVerticalGroup(
            InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InvoiceLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(INVO_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(INVO_New_Invoice_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(INVO_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(INVO_View_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(INVO_Remove_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(INVO_Export_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        Container.add(Invoice, "invMain");

        NI_Heading.setFont(NI_Heading.getFont().deriveFont(NI_Heading.getFont().getSize()+12f));
        NI_Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NI_Heading.setText("New Invoice");
        NI_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        NI_Customer_Details.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        NI_Customer_Name_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        NI_Customer_Name_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NI_Customer_Name_Label.setText("Customer's Name");
        NI_Customer_Name_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        NI_Customer_Contact_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        NI_Customer_Contact_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NI_Customer_Contact_Label.setText("Contact Number");
        NI_Customer_Contact_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        NI_Customer_Contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NI_Customer_ContactKeyPressed(evt);
            }
        });

        NI_Customer_Address_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        NI_Customer_Address_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NI_Customer_Address_Label.setText("Customer's Address");
        NI_Customer_Address_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout NI_Customer_DetailsLayout = new javax.swing.GroupLayout(NI_Customer_Details);
        NI_Customer_Details.setLayout(NI_Customer_DetailsLayout);
        NI_Customer_DetailsLayout.setHorizontalGroup(
            NI_Customer_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NI_Customer_DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NI_Customer_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NI_Customer_Name_Label)
                    .addComponent(NI_Customer_Address_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NI_Customer_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NI_Customer_DetailsLayout.createSequentialGroup()
                        .addComponent(NI_Customer_Name, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(NI_Customer_Contact_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(NI_Customer_Contact, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(NI_Customer_Address))
                .addContainerGap())
        );
        NI_Customer_DetailsLayout.setVerticalGroup(
            NI_Customer_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NI_Customer_DetailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NI_Customer_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NI_Customer_Name_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(NI_Customer_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(NI_Customer_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NI_Customer_Contact_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(NI_Customer_Contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(NI_Customer_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NI_Customer_Address_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NI_Customer_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        NI_Table.setAutoCreateRowSorter(true);
        NI_Table.setShowGrid(true);
        NI_Table.getTableHeader().setReorderingAllowed(false);
        NI_Table_Container.setViewportView(NI_Table);

        NI_Cancel_Button.setText("Cancel");
        NI_Cancel_Button.setToolTipText("Return to Invoice List");
        NI_Cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NI_Cancel_ButtonActionPerformed(evt);
            }
        });

        NI_Create_Button.setText("Create Invoice");
        NI_Create_Button.setToolTipText("Create a New Invoice using given Data");
        NI_Create_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NI_Create_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout New_InvoiceLayout = new javax.swing.GroupLayout(New_Invoice);
        New_Invoice.setLayout(New_InvoiceLayout);
        New_InvoiceLayout.setHorizontalGroup(
            New_InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_InvoiceLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(New_InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NI_Customer_Details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NI_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(New_InvoiceLayout.createSequentialGroup()
                        .addComponent(NI_Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NI_Create_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(NI_Table_Container))
                .addGap(60, 60, 60))
        );
        New_InvoiceLayout.setVerticalGroup(
            New_InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, New_InvoiceLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(NI_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NI_Customer_Details, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NI_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(New_InvoiceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NI_Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NI_Create_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        Container.add(New_Invoice, "invNew");

        INV_Heading.setFont(INV_Heading.getFont().deriveFont(INV_Heading.getFont().getSize()+12f));
        INV_Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        INV_Heading.setText("Inventory");
        INV_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        INV_Table.setAutoCreateRowSorter(true);
        INV_Table.setShowGrid(true);
        INV_Table.getTableHeader().setReorderingAllowed(false);
        INV_Table_Container.setViewportView(INV_Table);

        INV_Add_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus.png"))); // NOI18N
        INV_Add_Button.setToolTipText("Add a New Product to Inventory");
        INV_Add_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INV_Add_ButtonActionPerformed(evt);
            }
        });

        INV_Edit_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.png"))); // NOI18N
        INV_Edit_Button.setToolTipText("Edit Details of the Selected Product");
        INV_Edit_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INV_Edit_ButtonActionPerformed(evt);
            }
        });

        INV_Remove_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cross.png"))); // NOI18N
        INV_Remove_Button.setToolTipText("Remove Selected Products from Inventory");
        INV_Remove_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INV_Remove_ButtonActionPerformed(evt);
            }
        });

        INV_Update_Button.setText("Update Stock");
        INV_Update_Button.setToolTipText("Increase Available Quantity for Selected Product");
        INV_Update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INV_Update_ButtonActionPerformed(evt);
            }
        });

        INV_Import_Button.setText("Import");
        INV_Import_Button.setToolTipText("Import Inventory Data from a CSV File");
        INV_Import_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INV_Import_ButtonActionPerformed(evt);
            }
        });

        INV_Export_Button.setText("Export");
        INV_Export_Button.setToolTipText("Export Inventory Data to a CSV File");
        INV_Export_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                INV_Export_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InventoryLayout = new javax.swing.GroupLayout(Inventory);
        Inventory.setLayout(InventoryLayout);
        InventoryLayout.setHorizontalGroup(
            InventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(InventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InventoryLayout.createSequentialGroup()
                        .addComponent(INV_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(InventoryLayout.createSequentialGroup()
                        .addGroup(InventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(InventoryLayout.createSequentialGroup()
                                .addComponent(INV_Add_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(INV_Edit_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(INV_Remove_Button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(INV_Update_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(INV_Import_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(INV_Export_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(INV_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE))
                        .addGap(60, 60, 60))))
        );
        InventoryLayout.setVerticalGroup(
            InventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InventoryLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(INV_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(INV_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 344, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(InventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(INV_Remove_Button, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(INV_Edit_Button, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(INV_Import_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(INV_Export_Button, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(InventoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(INV_Add_Button, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(INV_Update_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(73, 73, 73))
        );

        Container.add(Inventory, "inventory");

        NP_Heading.setFont(NP_Heading.getFont().deriveFont(NP_Heading.getFont().getSize()+12f));
        NP_Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        NP_Heading.setText("Add New Product");
        NP_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        NP_Product_Details.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        NP_Product_Name_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NP_Product_Name_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NP_Product_Name_Label.setText("Product Name");

        NP_Price_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NP_Price_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NP_Price_Label.setText("Price");

        NP_GST_Rate_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NP_GST_Rate_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NP_GST_Rate_Label.setText("GST Rate");

        NP_Available_Quantity_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        NP_Available_Quantity_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        NP_Available_Quantity_Label.setText("Available Quantity");

        javax.swing.GroupLayout NP_Product_DetailsLayout = new javax.swing.GroupLayout(NP_Product_Details);
        NP_Product_Details.setLayout(NP_Product_DetailsLayout);
        NP_Product_DetailsLayout.setHorizontalGroup(
            NP_Product_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NP_Product_DetailsLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(NP_Product_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NP_Available_Quantity_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NP_GST_Rate_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NP_Price_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NP_Product_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(NP_Product_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(NP_GST_Rate, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NP_Price, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NP_Product_Name)
                    .addComponent(NP_Available_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        NP_Product_DetailsLayout.setVerticalGroup(
            NP_Product_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NP_Product_DetailsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(NP_Product_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NP_Product_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NP_Product_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(NP_Product_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NP_Price_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NP_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(NP_Product_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NP_GST_Rate_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NP_GST_Rate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(NP_Product_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NP_Available_Quantity_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NP_Available_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(149, Short.MAX_VALUE))
        );

        NP_Cancel_Button.setText("Cancel");
        NP_Cancel_Button.setToolTipText("");
        NP_Cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NP_Cancel_ButtonActionPerformed(evt);
            }
        });

        NP_Finish_Button.setText("Finish");
        NP_Finish_Button.setToolTipText("");
        NP_Finish_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NP_Finish_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout New_ProductLayout = new javax.swing.GroupLayout(New_Product);
        New_Product.setLayout(New_ProductLayout);
        New_ProductLayout.setHorizontalGroup(
            New_ProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_ProductLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(New_ProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(New_ProductLayout.createSequentialGroup()
                        .addComponent(NP_Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(NP_Finish_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(NP_Product_Details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NP_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        New_ProductLayout.setVerticalGroup(
            New_ProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, New_ProductLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(NP_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(NP_Product_Details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(New_ProductLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NP_Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NP_Finish_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        Container.add(New_Product, "invenNew");

        SE_TabbedPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        SE_Username.setBorder(javax.swing.BorderFactory.createTitledBorder("Change Username"));

        SE_Current_Username_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SE_Current_Username_Label.setText("Current Username");

        SE_Current_Username.setEditable(false);
        SE_Current_Username.setBackground(new java.awt.Color(255, 255, 255));
        SE_Current_Username.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SE_Current_Username.setEnabled(false);

        SE_New_Username_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SE_New_Username_Label.setText("New Username");

        SE_New_Username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SE_Change_Username_Button.setText("Change Username");
        SE_Change_Username_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SE_Change_Username_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SE_UsernameLayout = new javax.swing.GroupLayout(SE_Username);
        SE_Username.setLayout(SE_UsernameLayout);
        SE_UsernameLayout.setHorizontalGroup(
            SE_UsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_UsernameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_UsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(SE_New_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Current_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_UsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SE_Current_Username)
                    .addGroup(SE_UsernameLayout.createSequentialGroup()
                        .addComponent(SE_Change_Username_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 618, Short.MAX_VALUE))
                    .addComponent(SE_New_Username))
                .addContainerGap())
        );
        SE_UsernameLayout.setVerticalGroup(
            SE_UsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_UsernameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_UsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_Current_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Current_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_UsernameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SE_New_Username_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SE_New_Username))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SE_Change_Username_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        SE_Password.setBorder(javax.swing.BorderFactory.createTitledBorder("Change Password"));

        SE_Current_Password_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SE_Current_Password_Label.setText("Current Password");

        SE_Current_Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SE_New_Password_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SE_New_Password_Label.setText("New Password");

        SE_New_Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SE_Confirm_Password_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SE_Confirm_Password_Label.setText("Confirm Password");

        SE_Confirm_Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SE_Change_Password_Button.setText("Change Password");
        SE_Change_Password_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SE_Change_Password_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SE_PasswordLayout = new javax.swing.GroupLayout(SE_Password);
        SE_Password.setLayout(SE_PasswordLayout);
        SE_PasswordLayout.setHorizontalGroup(
            SE_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_PasswordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SE_PasswordLayout.createSequentialGroup()
                        .addComponent(SE_New_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SE_New_Password))
                    .addGroup(SE_PasswordLayout.createSequentialGroup()
                        .addComponent(SE_Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SE_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SE_PasswordLayout.createSequentialGroup()
                                .addComponent(SE_Change_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(SE_Confirm_Password)))
                    .addGroup(SE_PasswordLayout.createSequentialGroup()
                        .addComponent(SE_Current_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SE_Current_Password)))
                .addContainerGap())
        );
        SE_PasswordLayout.setVerticalGroup(
            SE_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_PasswordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_Current_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Current_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_New_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_New_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_Confirm_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SE_Change_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout SE_User_TabLayout = new javax.swing.GroupLayout(SE_User_Tab);
        SE_User_Tab.setLayout(SE_User_TabLayout);
        SE_User_TabLayout.setHorizontalGroup(
            SE_User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_User_TabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SE_Username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SE_Password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        SE_User_TabLayout.setVerticalGroup(
            SE_User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_User_TabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(SE_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SE_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(184, Short.MAX_VALUE))
        );

        SE_TabbedPane.addTab("User Details", SE_User_Tab);

        SE_Business_Name.setBorder(javax.swing.BorderFactory.createTitledBorder("Business Name"));

        SE_Current_Business_Label.setFont(SE_Current_Business_Label.getFont().deriveFont(SE_Current_Business_Label.getFont().getSize()+2f));
        SE_Current_Business_Label.setText("Current");
        SE_Current_Business_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SE_Current_Business_Name.setEditable(false);
        SE_Current_Business_Name.setBackground(new java.awt.Color(255, 255, 255));
        SE_Current_Business_Name.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SE_Current_Business_Name.setEnabled(false);

        SE_New_Business_Label.setFont(SE_New_Business_Label.getFont().deriveFont(SE_New_Business_Label.getFont().getSize()+2f));
        SE_New_Business_Label.setText("New");
        SE_New_Business_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SE_New_Business_Name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout SE_Business_NameLayout = new javax.swing.GroupLayout(SE_Business_Name);
        SE_Business_Name.setLayout(SE_Business_NameLayout);
        SE_Business_NameLayout.setHorizontalGroup(
            SE_Business_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Business_NameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Business_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SE_Current_Business_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(SE_New_Business_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_Business_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SE_Current_Business_Name)
                    .addComponent(SE_New_Business_Name))
                .addContainerGap())
        );
        SE_Business_NameLayout.setVerticalGroup(
            SE_Business_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Business_NameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Business_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_Current_Business_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Current_Business_Name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_Business_NameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_New_Business_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_New_Business_Name))
                .addContainerGap())
        );

        SE_Contact_Number.setBorder(javax.swing.BorderFactory.createTitledBorder("Contact Number"));

        SE_Current_Contact_Label.setFont(SE_Current_Contact_Label.getFont().deriveFont(SE_Current_Contact_Label.getFont().getSize()+2f));
        SE_Current_Contact_Label.setText("Current");

        SE_Current_Contact_Number.setEditable(false);
        SE_Current_Contact_Number.setBackground(new java.awt.Color(255, 255, 255));
        SE_Current_Contact_Number.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SE_Current_Contact_Number.setEnabled(false);

        SE_New_Contact_Label.setFont(SE_New_Contact_Label.getFont().deriveFont(SE_New_Contact_Label.getFont().getSize()+2f));
        SE_New_Contact_Label.setText("New");

        SE_New_Country_Code.setMaximumRowCount(5);
        SE_New_Country_Code.setModel(new javax.swing.DefaultComboBoxModel<>(Constant.COUNTRY_CODES));
        SE_New_Country_Code.setSelectedItem("+91");

        SE_New_Contact_Number.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        SE_New_Contact_Number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SE_New_Contact_NumberKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout SE_Contact_NumberLayout = new javax.swing.GroupLayout(SE_Contact_Number);
        SE_Contact_Number.setLayout(SE_Contact_NumberLayout);
        SE_Contact_NumberLayout.setHorizontalGroup(
            SE_Contact_NumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Contact_NumberLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Contact_NumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SE_Current_Contact_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(SE_New_Contact_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_Contact_NumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SE_Current_Contact_Number, javax.swing.GroupLayout.DEFAULT_SIZE, 828, Short.MAX_VALUE)
                    .addGroup(SE_Contact_NumberLayout.createSequentialGroup()
                        .addComponent(SE_New_Country_Code, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SE_New_Contact_Number)))
                .addContainerGap())
        );
        SE_Contact_NumberLayout.setVerticalGroup(
            SE_Contact_NumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Contact_NumberLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Contact_NumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_Current_Contact_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Current_Contact_Number))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_Contact_NumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SE_Contact_NumberLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SE_New_Contact_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SE_New_Contact_Number))
                    .addComponent(SE_New_Country_Code, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        SE_Email_Address.setBorder(javax.swing.BorderFactory.createTitledBorder("Email Address"));

        SE_Current_Email_Label.setFont(SE_Current_Email_Label.getFont().deriveFont(SE_Current_Email_Label.getFont().getSize()+2f));
        SE_Current_Email_Label.setText("Current");

        SE_Current_Email_Address.setEditable(false);
        SE_Current_Email_Address.setBackground(new java.awt.Color(255, 255, 255));
        SE_Current_Email_Address.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SE_Current_Email_Address.setEnabled(false);

        SE_New_Email_Label.setFont(SE_New_Email_Label.getFont().deriveFont(SE_New_Email_Label.getFont().getSize()+2f));
        SE_New_Email_Label.setText("New");

        SE_New_Email_Address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout SE_Email_AddressLayout = new javax.swing.GroupLayout(SE_Email_Address);
        SE_Email_Address.setLayout(SE_Email_AddressLayout);
        SE_Email_AddressLayout.setHorizontalGroup(
            SE_Email_AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Email_AddressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Email_AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SE_New_Email_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SE_Current_Email_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_Email_AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SE_Current_Email_Address)
                    .addComponent(SE_New_Email_Address))
                .addContainerGap())
        );
        SE_Email_AddressLayout.setVerticalGroup(
            SE_Email_AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Email_AddressLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Email_AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_Current_Email_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Current_Email_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_Email_AddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_New_Email_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_New_Email_Address))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        SE_Business_Location.setBorder(javax.swing.BorderFactory.createTitledBorder("Business Location (Address)"));

        SE_Current_Address_Label.setFont(SE_Current_Address_Label.getFont().deriveFont(SE_Current_Address_Label.getFont().getSize()+2f));
        SE_Current_Address_Label.setText("Current");

        SE_Current_Address.setEditable(false);
        SE_Current_Address.setBackground(new java.awt.Color(255, 255, 255));
        SE_Current_Address.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SE_Current_Address.setEnabled(false);

        SE_New_Address_Label.setFont(SE_New_Address_Label.getFont().deriveFont(SE_New_Address_Label.getFont().getSize()+2f));
        SE_New_Address_Label.setText("New");

        SE_New_Address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout SE_Business_LocationLayout = new javax.swing.GroupLayout(SE_Business_Location);
        SE_Business_Location.setLayout(SE_Business_LocationLayout);
        SE_Business_LocationLayout.setHorizontalGroup(
            SE_Business_LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Business_LocationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Business_LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SE_Current_Address_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                    .addComponent(SE_New_Address_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_Business_LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SE_Current_Address)
                    .addComponent(SE_New_Address))
                .addContainerGap())
        );
        SE_Business_LocationLayout.setVerticalGroup(
            SE_Business_LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Business_LocationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Business_LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_Current_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_Current_Address_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SE_Business_LocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SE_New_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SE_New_Address_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        SE_Save_Changes_Button.setText("Save Changes");
        SE_Save_Changes_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SE_Save_Changes_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SE_Business_TabLayout = new javax.swing.GroupLayout(SE_Business_Tab);
        SE_Business_Tab.setLayout(SE_Business_TabLayout);
        SE_Business_TabLayout.setHorizontalGroup(
            SE_Business_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Business_TabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SE_Business_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SE_Business_Location, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SE_Business_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SE_Contact_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SE_Email_Address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(SE_Business_TabLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(SE_Save_Changes_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 719, Short.MAX_VALUE)))
                .addContainerGap())
        );
        SE_Business_TabLayout.setVerticalGroup(
            SE_Business_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SE_Business_TabLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(SE_Business_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(SE_Contact_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(SE_Email_Address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(SE_Business_Location, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(SE_Save_Changes_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        SE_TabbedPane.addTab("Business Details", SE_Business_Tab);

        javax.swing.GroupLayout SettingsLayout = new javax.swing.GroupLayout(Settings);
        Settings.setLayout(SettingsLayout);
        SettingsLayout.setHorizontalGroup(
            SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SettingsLayout.createSequentialGroup()
                .addComponent(SE_TabbedPane)
                .addContainerGap())
        );
        SettingsLayout.setVerticalGroup(
            SettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SE_TabbedPane)
        );

        Container.add(Settings, "settings");

        AB_Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/app-icon-100x100.png"))); // NOI18N

        AB_Heading.setFont(AB_Heading.getFont().deriveFont(AB_Heading.getFont().getStyle() | java.awt.Font.BOLD, AB_Heading.getFont().getSize()+24));
        AB_Heading.setText("Speckle");
        AB_Heading.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        AB_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        AB_Version_Label.setFont(AB_Version_Label.getFont().deriveFont(AB_Version_Label.getFont().getSize()+4f));
        AB_Version_Label.setText("Version " + Constant.VERSION);
        AB_Version_Label.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        AB_Version_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        AB_Authors_Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(180, 180, 180)));

        AB_Authors_Container.setBorder(null);

        AB_Authors_Text.setEditable(false);
        AB_Authors_Text.setBackground(new java.awt.Color(255, 255, 255));
        AB_Authors_Text.setColumns(20);
        AB_Authors_Text.setFont(SpaceMono.deriveFont(java.awt.Font.PLAIN, 14));
        AB_Authors_Text.setRows(5);
        AB_Authors_Text.setText(Constant.AUTHORS);
        AB_Authors_Container.setViewportView(AB_Authors_Text);

        javax.swing.GroupLayout AB_Authors_TabLayout = new javax.swing.GroupLayout(AB_Authors_Tab);
        AB_Authors_Tab.setLayout(AB_Authors_TabLayout);
        AB_Authors_TabLayout.setHorizontalGroup(
            AB_Authors_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AB_Authors_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        AB_Authors_TabLayout.setVerticalGroup(
            AB_Authors_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AB_Authors_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        AB_TabbedPane.addTab("Authors", AB_Authors_Tab);

        AB_License_Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(180, 180, 180)));

        AB_License_Container.setBorder(null);

        AB_License_Text.setEditable(false);
        AB_License_Text.setBackground(new java.awt.Color(255, 255, 255));
        AB_License_Text.setColumns(20);
        AB_License_Text.setFont(SpaceMono.deriveFont(java.awt.Font.PLAIN, 14));
        AB_License_Text.setRows(5);
        AB_License_Text.setText(Constant.LICENSE);
        AB_License_Text.setCaretPosition(0);
        AB_License_Container.setViewportView(AB_License_Text);

        javax.swing.GroupLayout AB_License_TabLayout = new javax.swing.GroupLayout(AB_License_Tab);
        AB_License_Tab.setLayout(AB_License_TabLayout);
        AB_License_TabLayout.setHorizontalGroup(
            AB_License_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AB_License_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        AB_License_TabLayout.setVerticalGroup(
            AB_License_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AB_License_Container, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        AB_TabbedPane.addTab("License", AB_License_Tab);

        AB_Credits_Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(180, 180, 180)));

        AB_Credits_Container.setBorder(null);

        AB_Credits_Text.setEditable(false);
        AB_Credits_Text.setBackground(new java.awt.Color(255, 255, 255));
        AB_Credits_Text.setColumns(20);
        AB_Credits_Text.setFont(SpaceMono.deriveFont(java.awt.Font.PLAIN, 14));
        AB_Credits_Text.setRows(5);
        AB_Credits_Text.setText(Constant.CREDITS);
        AB_Credits_Container.setViewportView(AB_Credits_Text);

        javax.swing.GroupLayout AB_Credits_TabLayout = new javax.swing.GroupLayout(AB_Credits_Tab);
        AB_Credits_Tab.setLayout(AB_Credits_TabLayout);
        AB_Credits_TabLayout.setHorizontalGroup(
            AB_Credits_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AB_Credits_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        AB_Credits_TabLayout.setVerticalGroup(
            AB_Credits_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AB_Credits_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        AB_TabbedPane.addTab("Credits", AB_Credits_Tab);

        AB_TabbedPane.setSelectedComponent(AB_License_Tab);

        javax.swing.GroupLayout AboutLayout = new javax.swing.GroupLayout(About);
        About.setLayout(AboutLayout);
        AboutLayout.setHorizontalGroup(
            AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AboutLayout.createSequentialGroup()
                        .addComponent(AB_Logo)
                        .addGap(18, 18, 18)
                        .addGroup(AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AB_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AB_Version_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(AB_TabbedPane))
                .addGap(56, 56, 56))
        );
        AboutLayout.setVerticalGroup(
            AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(AboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AboutLayout.createSequentialGroup()
                        .addComponent(AB_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AB_Version_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(AB_Logo))
                .addGap(27, 27, 27)
                .addComponent(AB_TabbedPane)
                .addGap(50, 50, 50))
        );

        Container.add(About, "about");

        MB_File_Menu.setText("File");

        MB_New_Invoice.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_New_Invoice.setText("New Invoice");
        MB_New_Invoice.setEnabled(false);
        MB_New_Invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_New_InvoiceActionPerformed(evt);
            }
        });
        MB_File_Menu.add(MB_New_Invoice);

        MB_Invoice_History.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_Invoice_History.setText("Invoice History");
        MB_Invoice_History.setEnabled(false);
        MB_Invoice_History.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_Invoice_HistoryActionPerformed(evt);
            }
        });
        MB_File_Menu.add(MB_Invoice_History);

        MB_Inventory.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_Inventory.setText("Inventory");
        MB_Inventory.setEnabled(false);
        MB_Inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_InventoryActionPerformed(evt);
            }
        });
        MB_File_Menu.add(MB_Inventory);
        MB_File_Menu.add(MB_Separator_01);

        MB_Sign_Out.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_Sign_Out.setText("Sign Out");
        MB_Sign_Out.setEnabled(false);
        MB_Sign_Out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_Sign_OutActionPerformed(evt);
            }
        });
        MB_File_Menu.add(MB_Sign_Out);
        MB_File_Menu.add(MB_Separator_02);

        MB_Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_Exit.setText("Exit");
        MB_Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_ExitActionPerformed(evt);
            }
        });
        MB_File_Menu.add(MB_Exit);

        MenuBar.add(MB_File_Menu);

        MB_Inventory_Menu.setText("Inventory");

        MB_INV_Add.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_INV_Add.setText("Add");
        MB_INV_Add.setEnabled(false);
        MB_INV_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_INV_AddActionPerformed(evt);
            }
        });
        MB_Inventory_Menu.add(MB_INV_Add);

        MB_INV_Edit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_INV_Edit.setText("Edit");
        MB_INV_Edit.setEnabled(false);
        MB_INV_Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_INV_EditActionPerformed(evt);
            }
        });
        MB_Inventory_Menu.add(MB_INV_Edit);

        MB_INV_Remove.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        MB_INV_Remove.setText("Remove");
        MB_INV_Remove.setEnabled(false);
        MB_INV_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_INV_RemoveActionPerformed(evt);
            }
        });
        MB_Inventory_Menu.add(MB_INV_Remove);
        MB_Inventory_Menu.add(MB_Separator_03);

        MB_INV_Update.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_INV_Update.setText("Update Stock");
        MB_INV_Update.setEnabled(false);
        MB_INV_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_INV_UpdateActionPerformed(evt);
            }
        });
        MB_Inventory_Menu.add(MB_INV_Update);

        MB_INV_Import.setText("Import Data");
        MB_INV_Import.setEnabled(false);
        MB_INV_Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_INV_ImportActionPerformed(evt);
            }
        });
        MB_Inventory_Menu.add(MB_INV_Import);

        MenuBar.add(MB_Inventory_Menu);

        MB_Tools_Menu.setText("Tools");

        MB_Export_Invoice.setText("Export Invoice History");
        MB_Export_Invoice.setEnabled(false);
        MB_Export_Invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_Export_InvoiceActionPerformed(evt);
            }
        });
        MB_Tools_Menu.add(MB_Export_Invoice);

        MB_Export_Inventory.setText("Export Inventory Data");
        MB_Export_Inventory.setEnabled(false);
        MB_Export_Inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_Export_InventoryActionPerformed(evt);
            }
        });
        MB_Tools_Menu.add(MB_Export_Inventory);
        MB_Tools_Menu.add(MB_Separator_04);

        MB_Settings.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        MB_Settings.setText("Settings");
        MB_Settings.setEnabled(false);
        MB_Settings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_SettingsActionPerformed(evt);
            }
        });
        MB_Tools_Menu.add(MB_Settings);

        MenuBar.add(MB_Tools_Menu);

        MB_Help_Menu.setText("Help");

        MB_About.setText("About");
        MB_About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MB_AboutActionPerformed(evt);
            }
        });
        MB_Help_Menu.add(MB_About);

        MenuBar.add(MB_Help_Menu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SideBar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MB_New_InvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_New_InvoiceActionPerformed
        NewInvoiceActionPerformed();
    }//GEN-LAST:event_MB_New_InvoiceActionPerformed

    private void MB_Invoice_HistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_Invoice_HistoryActionPerformed
        Invoicing_ActionPerformed();
    }//GEN-LAST:event_MB_Invoice_HistoryActionPerformed

    private void MB_InventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_InventoryActionPerformed
        Inventory_ActionPerformed();
    }//GEN-LAST:event_MB_InventoryActionPerformed

    private void MB_Sign_OutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_Sign_OutActionPerformed
        SignOut_ActionPerformed();
    }//GEN-LAST:event_MB_Sign_OutActionPerformed

    private void MB_ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_MB_ExitActionPerformed

    private void MB_INV_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_INV_AddActionPerformed
        Inventory_AddActionPerformed();
    }//GEN-LAST:event_MB_INV_AddActionPerformed

    private void MB_INV_EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_INV_EditActionPerformed
        Inventory_EditActionPerformed();
    }//GEN-LAST:event_MB_INV_EditActionPerformed

    private void MB_INV_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_INV_RemoveActionPerformed
        Inventory_RemoveActionPerformed();
    }//GEN-LAST:event_MB_INV_RemoveActionPerformed

    private void MB_INV_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_INV_UpdateActionPerformed
        Inventory_UpdateActionPerformed();
    }//GEN-LAST:event_MB_INV_UpdateActionPerformed

    private void MB_INV_ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_INV_ImportActionPerformed
        if (Function.InventoryImportActionPerformed())
            Inventory_ActionPerformed();
    }//GEN-LAST:event_MB_INV_ImportActionPerformed

    private void MB_Export_InvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_Export_InvoiceActionPerformed
        Function.ExportActionPerformed("Invoice");
    }//GEN-LAST:event_MB_Export_InvoiceActionPerformed

    private void MB_Export_InventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_Export_InventoryActionPerformed
        Function.ExportActionPerformed("Inventory");
    }//GEN-LAST:event_MB_Export_InventoryActionPerformed

    private void MB_SettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_SettingsActionPerformed
        Settings_ActionPerformed();
    }//GEN-LAST:event_MB_SettingsActionPerformed

    private void MB_AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MB_AboutActionPerformed
        About_ActionPerformed();
    }//GEN-LAST:event_MB_AboutActionPerformed

    private void SB_Home_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SB_Home_ButtonActionPerformed
        Home_ActionPerformed();
    }//GEN-LAST:event_SB_Home_ButtonActionPerformed

    private void SB_Invoicing_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SB_Invoicing_ButtonActionPerformed
        Invoicing_ActionPerformed();
    }//GEN-LAST:event_SB_Invoicing_ButtonActionPerformed

    private void SB_Inventory_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SB_Inventory_ButtonActionPerformed
        Inventory_ActionPerformed();
    }//GEN-LAST:event_SB_Inventory_ButtonActionPerformed

    private void SB_Settings_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SB_Settings_ButtonActionPerformed
        Settings_ActionPerformed();
    }//GEN-LAST:event_SB_Settings_ButtonActionPerformed

    private void SB_About_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SB_About_ButtonActionPerformed
        About_ActionPerformed();
    }//GEN-LAST:event_SB_About_ButtonActionPerformed

    private void SB_SignOut_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SB_SignOut_ButtonActionPerformed
        SignOut_ActionPerformed();
    }//GEN-LAST:event_SB_SignOut_ButtonActionPerformed

    private void SI_UsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SI_UsernameKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
             java.awt.KeyboardFocusManager FocusManager = java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager();
             FocusManager.focusNextComponent();
        }
    }//GEN-LAST:event_SI_UsernameKeyPressed

    private void SI_PasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SI_PasswordKeyPressed
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            LogIn_ActionPerformed();
        }
    }//GEN-LAST:event_SI_PasswordKeyPressed

    private void SI_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SI_ButtonActionPerformed
        LogIn_ActionPerformed();
    }//GEN-LAST:event_SI_ButtonActionPerformed

    private void SM_Next_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SM_Next_ButtonActionPerformed
        String username = SM_Username.getText();
        String password = new String(SM_Create_Password.getPassword());
        String confirmPassword = new String(SM_Confirm_Password.getPassword());
        //String recoveryKey = Function.randomAlphaNumeric(16);
        if (username.equals("") || password.equals(""))
            JOptionPane.showMessageDialog(null, "Username or Password cannot be Empty. Please Try Again!", "Username/Password Empty", JOptionPane.ERROR_MESSAGE);
        else if (password.length() < 8)
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least 8 Characters. Please Try Again!", "Password Too Short", JOptionPane.ERROR_MESSAGE);
        else if (!Function.checkPass(password))
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least One Numeric, One Uppercase and One Lowercase Character. Please Try Again!", "Insecure Password", JOptionPane.ERROR_MESSAGE);
        else if (!password.equals(confirmPassword))
            JOptionPane.showMessageDialog(null, "The Passwords in Password Fields do not Match. Please Try Again!", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
        else {
            SQLite.userConfig(Base64.getEncoder().encodeToString(username.getBytes()), Password.hash(password).addRandomSalt().withArgon2().getResult()/*, Password.hash(recoveryKey).addRandomSalt().withArgon2().getResult()*/);
            //VD_Username.setText(username);
            //VD_Recovery_Key.setText(recoveryKey);
            Container_Deck.show(Container, "signUpDetails");
        }
    }//GEN-LAST:event_SM_Next_ButtonActionPerformed

    private void SD_Contact_NumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SD_Contact_NumberKeyPressed
        String Number = SD_Contact_Number.getText();
        int length = Number.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 15)
                SD_Contact_Number.setEditable(true);
            else
                SD_Contact_Number.setEditable(false);
        } else {
            switch (evt.getExtendedKeyCode()) {
                case java.awt.event.KeyEvent.VK_BACK_SPACE -> SD_Contact_Number.setEditable(true);
                case java.awt.event.KeyEvent.VK_DELETE -> SD_Contact_Number.setEditable(true);
                default -> SD_Contact_Number.setEditable(false);
            }
        }
    }//GEN-LAST:event_SD_Contact_NumberKeyPressed

    private void SD_Back_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SD_Back_ButtonActionPerformed
        Container_Deck.show(Container, "signUpMain");
    }//GEN-LAST:event_SD_Back_ButtonActionPerformed

    private void SD_SignUp_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SD_SignUp_ButtonActionPerformed
        String businessName = SD_Business_Name.getText();
        String countryCode = SD_Country_Code.getSelectedItem().toString();
        String contactNumber = SD_Contact_Number.getText();
        String emailAddress = SD_Email_Address.getText();
        String businessLocation = SD_Business_Location.getText();
        String Salt = Function.randomAlphaNumeric(128);
        if (businessName.equals("") || contactNumber.equals("") || emailAddress.equals("") || businessLocation.equals(""))
            JOptionPane.showMessageDialog(null, "All Fields are Required to be Filled. Please Try Again!", "Empty Feilds", JOptionPane.ERROR_MESSAGE);
        else {
            SQLite.setConfigValue("Salt", Salt);
            SQLite.setConfigValue("Signed Up", "True");
            SQLite.compConfig(businessName, countryCode, contactNumber, emailAddress, businessLocation);
            //VD_Business_Name.setText(businessName);
            //VD_Contact_Number.setText(contactNumber);
            //VD_Email_Address.setText(emailAddress);
            //VD_Business_Location.setText(businessLocation);
            SB_Home_Button.setEnabled(true);
            SB_About_Button.setEnabled(true);
            MB_About.setEnabled(true);
            SignIn_ActionPerformed(Password.hash(new String(SM_Create_Password.getPassword())).addSalt(Salt).withPBKDF2().getResult());
        }
    }//GEN-LAST:event_SD_SignUp_ButtonActionPerformed

    private void VD_Finish_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VD_Finish_ButtonActionPerformed
        //SB_Home_Button.setEnabled(true);
        //SB_About_Button.setEnabled(true);
        //MB_About.setEnabled(true);
        //SignIn_ActionPerformed();
    }//GEN-LAST:event_VD_Finish_ButtonActionPerformed

    private void FP_Cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FP_Cancel_ButtonActionPerformed
        //Container_Deck.show(Container, "signIn");
    }//GEN-LAST:event_FP_Cancel_ButtonActionPerformed

    private void FP_Reset_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FP_Reset_ButtonActionPerformed
        /*String currentRecoveryKey = FP_Recovery_Key.getText();
        String newPassword = new String(FP_New_Password.getPassword());
        String confirmPassword = new String(FP_Confirm_Password.getPassword());
        String newRecoveryKey = Function.randomAlphaNumeric(16);
        if (currentRecoveryKey.equals("") || newPassword.equals(""))
            JOptionPane.showMessageDialog(null, "Recovery Key or Password cannot be Empty. Please Try Again!", "Recovery Key/Password Empty", JOptionPane.ERROR_MESSAGE);
        else if (!Password.check(currentRecoveryKey, SQLite.getConfigValue("Recovery Key")).withArgon2())
            JOptionPane.showMessageDialog(null, "The Recovery Key You Have Entered is Incorrect. Please Try Again!", "Incorrect Recovery Key", JOptionPane.ERROR_MESSAGE);
        else if (newPassword.length() < 8)
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least 8 Characters. Please Try Again!", "Password Too Short", JOptionPane.ERROR_MESSAGE);
        else if (!Function.checkPass(newPassword))
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least One Numeric, One Uppercase and One Lowercase Character. Please Try Again!", "Insecure Password", JOptionPane.ERROR_MESSAGE);
        else if (!newPassword.equals(confirmPassword))
            JOptionPane.showMessageDialog(null, "New Password and Confirm Password Doesn't Match. Please Try Again!", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
        else if (Password.check(newPassword, SQLite.getConfigValue("Password")).withArgon2())
            JOptionPane.showMessageDialog(null, "The Password Enterd has been used Already. Try Again with a Password You haven’t used Before!", "Old Password Used", JOptionPane.ERROR_MESSAGE);
        else {
            SQLite.setConfigValue("Password", Password.hash(newPassword).addRandomSalt().withArgon2().getResult());
            SQLite.setConfigValue("Recovery Key", Password.hash(newRecoveryKey).addRandomSalt().withArgon2().getResult());
            JOptionPane.showMessageDialog(null, "Password Has Been Changed Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            JOptionPane.showMessageDialog(null, "Your New Recovery Key is " + newRecoveryKey, "Recovery Key", JOptionPane.INFORMATION_MESSAGE);
            SI_Username.setText("");
            SI_Password.setText("");
            Container_Deck.show(Container, "signIn");
            FP_Recovery_Key.setText("");
            FP_New_Password.setText("");
            FP_Confirm_Password.setText("");
        }*/
    }//GEN-LAST:event_FP_Reset_ButtonActionPerformed

    private void INVO_New_Invoice_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INVO_New_Invoice_ButtonActionPerformed
        NewInvoiceActionPerformed();
    }//GEN-LAST:event_INVO_New_Invoice_ButtonActionPerformed

    private void INVO_View_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INVO_View_ButtonActionPerformed
        int row = INVO_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select an Invoice from the Inovice List.", "No Invoice Selected", JOptionPane.ERROR_MESSAGE);
        else {
            String invID = INVO_Table.getValueAt(row, 0).toString();
            Function.invoicePDF(invID);
            try {
                Desktop.getDesktop().open(Function.invPath);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_INVO_View_ButtonActionPerformed

    private void INVO_Remove_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INVO_Remove_ButtonActionPerformed
        int[] rows = INVO_Table.getSelectedRows();
        if (rows.length == 0)
            JOptionPane.showMessageDialog(null, "Please Select atleast one Invoice to be Deleted.", "No Invoice Selected", JOptionPane.ERROR_MESSAGE);
        else {
            int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete selected Invoices?", "Delete Selected Invoices", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                for (int i = 0; i < rows.length; i++) {
                    SQLite.remInvoice(INVO_Table.getValueAt(rows[i], 0).toString());
                }
                Invoicing_ActionPerformed();
            }
        }
    }//GEN-LAST:event_INVO_Remove_ButtonActionPerformed

    private void INVO_Export_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INVO_Export_ButtonActionPerformed
        Function.ExportActionPerformed("Invoice");
    }//GEN-LAST:event_INVO_Export_ButtonActionPerformed

    private void NI_Customer_ContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NI_Customer_ContactKeyPressed
        String Number = NI_Customer_Contact.getText();
        int length = Number.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 15)
                NI_Customer_Contact.setEditable(true);
            else
                NI_Customer_Contact.setEditable(false);
        } else {
            switch (evt.getExtendedKeyCode()) {
                case java.awt.event.KeyEvent.VK_BACK_SPACE -> NI_Customer_Contact.setEditable(true);
                case java.awt.event.KeyEvent.VK_DELETE -> NI_Customer_Contact.setEditable(true);
                default -> NI_Customer_Contact.setEditable(false);
            }
        }
    }//GEN-LAST:event_NI_Customer_ContactKeyPressed

    private void NI_Cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NI_Cancel_ButtonActionPerformed
        Container_Deck.show(Container, "invMain");
    }//GEN-LAST:event_NI_Cancel_ButtonActionPerformed

    private void NI_Create_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NI_Create_ButtonActionPerformed
        int prodSelected = 0;
        boolean emptyQuan = false;
        boolean excessQuan = false;
        String invID = "INV-" + new java.text.SimpleDateFormat("yyMMdd-HHmmss").format(new java.util.Date()) + "-" + Function.randomID(4);
        String custName = NI_Customer_Name.getText();
        String custContact = NI_Customer_Contact.getText();
        String custAddress = NI_Customer_Address.getText();
        String saleDate = new java.text.SimpleDateFormat("dd MMMM yyyy").format(new java.util.Date());
        String saleGST = "0";
        String saleAmount = "0";
        for (int row = 0; row < NI_Table.getRowCount(); row++) {
            if (Boolean.parseBoolean(NI_Table.getValueAt(row, 0).toString())) {
                prodSelected++;
                String availQuan = Integer.toString((Integer) NI_Table.getValueAt(row, 5));
                String purchQuan = "0";
                if (NI_Table.getValueAt(row, 6) != null)
                    purchQuan = Integer.toString((Integer) NI_Table.getValueAt(row, 6));
                if (purchQuan.equals("0")) {
                    emptyQuan = true;
                }
                int remaingQuan = Integer.parseInt(availQuan) - Integer.parseInt(purchQuan);
                if (remaingQuan < 0)
                    excessQuan = true;
            }
        }
        if (custName.equals("") || custContact.equals("") || custAddress.equals(""))
            JOptionPane.showMessageDialog(null, "Customer Details can't be Empty. Please Try Again!", "Customer Details Empty", JOptionPane.ERROR_MESSAGE);
        else if (prodSelected == 0)
            JOptionPane.showMessageDialog(null, "At least one Product needs to be Selected. Please Try Again!", "No Products Selected", JOptionPane.ERROR_MESSAGE);
        else if (emptyQuan)
            JOptionPane.showMessageDialog(null, "Purchased Quantity for one or more Products is Empty. Please Try Again!", "Purchased Quantity Empty", JOptionPane.ERROR_MESSAGE);
        else if (excessQuan)
            JOptionPane.showMessageDialog(null, "Purchased Quantity exceeds the Available Quantity for one or more Products. Please Try Again!", "Purchased Quantity Exceeded", JOptionPane.ERROR_MESSAGE);
        else {
            org.json.JSONArray productsPurchased = new org.json.JSONArray();
            for (int row = 0, rows = NI_Table.getRowCount(); row < rows; row++) {
                if (Boolean.parseBoolean(NI_Table.getValueAt(row, 0).toString())) {
                    String prodID = (String) NI_Table.getValueAt(row, 1);
                    String prodName = (String) NI_Table.getValueAt(row, 2);
                    double Price = (Double) NI_Table.getValueAt(row, 3);
                    int gstRate = (Integer) NI_Table.getValueAt(row, 4);
                    int availQuan = (Integer) NI_Table.getValueAt(row, 5);
                    int purchQuan = (Integer) NI_Table.getValueAt(row, 6);
                    double Amount = Price * purchQuan;
                    double gstAmount = (Amount * gstRate) / 100;
                    double netAmount = Amount + gstAmount;
                    org.json.JSONObject product = new org.json.JSONObject();
                    product.put("Product Name", prodName);
                    product.put("Price", Price);
                    product.put("Purchased Quantity", purchQuan);
                    product.put("GST Rate", gstRate);
                    product.put("GST Amount", gstAmount);
                    product.put("Net Amount", netAmount);
                    productsPurchased.put(product);
                    saleGST = Double.toString(Double.parseDouble(saleGST) + gstAmount);
                    saleAmount = Double.toString(Double.parseDouble(saleAmount) + netAmount);
                    SQLite.updateStock(prodID, Integer.toString(availQuan - purchQuan));
                }
            }
            SQLite.newInvoice(invID, custName, custContact, custAddress, saleDate, saleGST, saleAmount, productsPurchased.toString());
            Function.invoicePDF(invID);
            Invoicing_ActionPerformed();
            try {
                Desktop.getDesktop().open(Function.invPath);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_NI_Create_ButtonActionPerformed

    private void INV_Add_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INV_Add_ButtonActionPerformed
        Inventory_AddActionPerformed();
    }//GEN-LAST:event_INV_Add_ButtonActionPerformed

    private void INV_Edit_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INV_Edit_ButtonActionPerformed
        Inventory_EditActionPerformed();
    }//GEN-LAST:event_INV_Edit_ButtonActionPerformed

    private void INV_Remove_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INV_Remove_ButtonActionPerformed
        Inventory_RemoveActionPerformed();
    }//GEN-LAST:event_INV_Remove_ButtonActionPerformed

    private void INV_Update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INV_Update_ButtonActionPerformed
        Inventory_UpdateActionPerformed();
    }//GEN-LAST:event_INV_Update_ButtonActionPerformed

    private void INV_Import_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INV_Import_ButtonActionPerformed
        if (Function.InventoryImportActionPerformed())
            Inventory_ActionPerformed();
    }//GEN-LAST:event_INV_Import_ButtonActionPerformed

    private void INV_Export_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_INV_Export_ButtonActionPerformed
        Function.ExportActionPerformed("Inventory");
    }//GEN-LAST:event_INV_Export_ButtonActionPerformed

    private void NP_Cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NP_Cancel_ButtonActionPerformed
        EnableInventory_ActionPerformed();
        Container_Deck.show(Container, "inventory");
    }//GEN-LAST:event_NP_Cancel_ButtonActionPerformed

    private void NP_Finish_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NP_Finish_ButtonActionPerformed
        String productName = NP_Product_Name.getText();
        String price = NP_Price.getText();
        String gstRate = NP_GST_Rate.getText();
        String availableQuantity = NP_Available_Quantity.getText();
        if (productName.equals("") || price.equals("") || gstRate.equals("") || availableQuantity.equals (""))
            JOptionPane.showMessageDialog(null, "Product Details can't be Empty. Please Try Again!", "Product Details Empty", JOptionPane.ERROR_MESSAGE);
        else {
            SQLite.updateInven(PID, productName, price, gstRate, availableQuantity);
            Inventory_ActionPerformed();
        }
    }//GEN-LAST:event_NP_Finish_ButtonActionPerformed

    private void SE_Change_Username_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SE_Change_Username_ButtonActionPerformed
        String newUsername = SE_New_Username.getText();
        if (newUsername.equals(""))
            JOptionPane.showMessageDialog(null, "Username cannot be Empty. Please Try Again!", "Username Field Empty", JOptionPane.ERROR_MESSAGE);
        else {
            SQLite.setConfigValue("Username", Base64.getEncoder().encodeToString(newUsername.getBytes()));
            JOptionPane.showMessageDialog(null, "Your Username has been changed Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            SE_Current_Username.setText(newUsername);
            SE_New_Username.setText("");
        }
    }//GEN-LAST:event_SE_Change_Username_ButtonActionPerformed

    private void SE_Change_Password_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SE_Change_Password_ButtonActionPerformed
        String currentPassword = new String(SE_Current_Password.getPassword());
        String newPassword = new String(SE_New_Password.getPassword());
        String confirmPassword = new String(SE_Confirm_Password.getPassword());
        String Salt = Function.randomAlphaNumeric(128);
        if (currentPassword.equals("") || newPassword.equals(""))
            JOptionPane.showMessageDialog(null, "Both Current and New Passwords are needed for changing Password. Please Try Again!", "Password Fields Empty", JOptionPane.ERROR_MESSAGE);
        else if (!Password.check(currentPassword, SQLite.getConfigValue("Password")).withArgon2())
            JOptionPane.showMessageDialog(null, "The Current Password is Incorrect. Please Try Again!", "Incorrect Password", JOptionPane.ERROR_MESSAGE);
        else if (newPassword.length() < 8)
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least 8 Characters. Please Try Again!", "Password Too Short", JOptionPane.ERROR_MESSAGE);
        else if (!Function.checkPass(newPassword))
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least One Numeric, One Uppercase and One Lowercase Character. Please Try Again!", "Insecure Password", JOptionPane.ERROR_MESSAGE);
        else if (!newPassword.equals(confirmPassword))
            JOptionPane.showMessageDialog(null, "The Password in Confirm Password Field does not Match. Please Try Again!", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
        else if (Password.check(newPassword, SQLite.getConfigValue("Password")).withArgon2())
            JOptionPane.showMessageDialog(null, "The Password Enterd has been used Already. Try Again with a Password You haven’t used Before!", "Old Password Used", JOptionPane.ERROR_MESSAGE);
        else {
            SQLite.setConfigValue("Password", Password.hash(newPassword).addRandomSalt().withArgon2().getResult());
            SQLite.setConfigValue("Salt", Salt);
            SQLite.resetMainDB(Password.hash(newPassword).addSalt(Salt).withPBKDF2().getResult());
            JOptionPane.showMessageDialog(null, "Your Password has been changed Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            SE_Current_Password.setText("");
            SE_New_Password.setText("");
            SE_Confirm_Password.setText("");
        }
    }//GEN-LAST:event_SE_Change_Password_ButtonActionPerformed

    private void SE_New_Contact_NumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SE_New_Contact_NumberKeyPressed
        String Number = SE_New_Contact_Number.getText();
        int length = Number.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 15)
                SE_New_Contact_Number.setEditable(true);
            else
                SE_New_Contact_Number.setEditable(false);
        } else {
            switch (evt.getExtendedKeyCode()) {
                case java.awt.event.KeyEvent.VK_BACK_SPACE -> SE_New_Contact_Number.setEditable(true);
                case java.awt.event.KeyEvent.VK_DELETE -> SE_New_Contact_Number.setEditable(true);
                default -> SE_New_Contact_Number.setEditable(false);
            }
        }
    }//GEN-LAST:event_SE_New_Contact_NumberKeyPressed

    private void SE_Save_Changes_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SE_Save_Changes_ButtonActionPerformed
        String newBusinessName = SE_New_Business_Name.getText();
        String newCountryCode = SE_New_Country_Code.getSelectedItem().toString();
        String newContactNumber = SE_New_Contact_Number.getText();
        String newEmailAddress = SE_New_Email_Address.getText();
        String newBusinessLocation = SE_New_Address.getText();
        if (newBusinessName.equals("") && newContactNumber.equals("") && newEmailAddress.equals("") && newBusinessLocation.equals(""))
            JOptionPane.showMessageDialog(null, "You haven't made any Changes. Please Try Again!", "No Changes Found", JOptionPane.ERROR_MESSAGE);
        else {
            if (newBusinessName.equals(""))
                newBusinessName = SE_Current_Business_Name.getText();
            if (newEmailAddress.equals(""))
                newEmailAddress = SE_Current_Email_Address.getText();
            if (newBusinessLocation.equals(""))
                newBusinessLocation = SE_Current_Address.getText();
            if (newContactNumber.equals("")) {
                newCountryCode = SQLite.getConfigValue("Country Code");
                newContactNumber = SQLite.getConfigValue("Contact Number");
                SQLite.compConfig(newBusinessName, newCountryCode, newContactNumber, newEmailAddress, newBusinessLocation);
                JOptionPane.showMessageDialog(null, "Your Changes Have Been Saved Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            else {
                SQLite.compConfig(newBusinessName, newCountryCode, newContactNumber, newEmailAddress, newBusinessLocation);
                JOptionPane.showMessageDialog(null, "Your Changes Have Been Saved Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            Settings_ActionPerformed();
            SE_New_Business_Name.setText("");
            SE_New_Contact_Number.setText("");
            SE_New_Email_Address.setText("");
            SE_New_Address.setText("");
        }
    }//GEN-LAST:event_SE_Save_Changes_ButtonActionPerformed

    private void LogIn_ActionPerformed() {
        String username = SI_Username.getText();
        String password = new String(SI_Password.getPassword());
        if (username.equals("") || password.equals(""))
            JOptionPane.showMessageDialog(null, "Please enter Username and Password, they cannot be Blank. Please Try Again!", "Credentials are Blank", JOptionPane.ERROR_MESSAGE);
        else if (SQLite.logIn(username, password))
            SignIn_ActionPerformed(Password.hash(password).addSalt(SQLite.getConfigValue("Salt")).withPBKDF2().getResult());
        else
            JOptionPane.showMessageDialog(null, "The Username or Password entered are Incorrect. Please Try Again!", "Incorrect Credentials", JOptionPane.ERROR_MESSAGE);
    }
    
    private void SignIn_ActionPerformed(String dbPass) {
        LoggedIn = true;
        SQLite.initMainDB(dbPass);
        Home_ActionPerformed();
        MB_New_Invoice.setEnabled(true);
        MB_Invoice_History.setEnabled(true);
        MB_Inventory.setEnabled(true);
        MB_Sign_Out.setEnabled(true);
        MB_Export_Invoice.setEnabled(true);
        MB_Export_Inventory.setEnabled(true);
        MB_Settings.setEnabled(true);
        SB_Invoicing_Button.setEnabled(true);
        SB_Inventory_Button.setEnabled(true);
        SB_Settings_Button.setEnabled(true);
        SB_SignOut_Button.setEnabled(true);
    }

    private void SignOut_ActionPerformed() {
        LoggedIn = false;
        SI_Username.setText("");
        SI_Password.setText("");
        Container_Deck.show(Container, "signIn");
        SQLite.closeMainDB();
        MB_New_Invoice.setEnabled(false);
        MB_Invoice_History.setEnabled(false);
        MB_Inventory.setEnabled(false);
        MB_Sign_Out.setEnabled(false);
        DisableInventory_ActionPerformed();
        MB_Export_Invoice.setEnabled(false);
        MB_Export_Inventory.setEnabled(false);
        MB_Settings.setEnabled(false);
        SB_Invoicing_Button.setEnabled(false);
        SB_Inventory_Button.setEnabled(false);
        SB_Settings_Button.setEnabled(false);
        SB_SignOut_Button.setEnabled(false);
    }

    private void EnableInventory_ActionPerformed() {
        MB_INV_Add.setEnabled(true);
        MB_INV_Edit.setEnabled(true);
        MB_INV_Remove.setEnabled(true);
        MB_INV_Update.setEnabled(true);
        MB_INV_Import.setEnabled(true);
    }

    private void DisableInventory_ActionPerformed() {
        MB_INV_Add.setEnabled(false);
        MB_INV_Edit.setEnabled(false);
        MB_INV_Remove.setEnabled(false);
        MB_INV_Update.setEnabled(false);
        MB_INV_Import.setEnabled(false);
    }

    private void Home_ActionPerformed() {
        if (LoggedIn) {
            HOME_Help_Paragraph.setText("<html>Welcome <b>" + new String(Base64.getDecoder().decode(SQLite.getConfigValue("Username"))) + "</b>! This is a Quick Overview of Speckle :</html>");
            String data[][] = SQLite.dashData();
            HOME_Product_One_Label.setText(data[0][0]);
            HOME_Product_One_Quantity.setText(data[0][1]);
            HOME_Product_Two_Label.setText(data[1][0]);
            HOME_Product_Two_Quantity.setText(data[1][1]);
            HOME_Product_Three_Label.setText(data[2][0]);
            HOME_Product_Three_Quantity.setText(data[2][1]);
            HOME_Product_Four_Label.setText(data[3][0]);
            HOME_Product_Four_Quantity.setText(data[3][1]);
            HOME_Product_Five_Label.setText(data[4][0]);
            HOME_Product_Five_Quantity.setText(data[4][1]);
            DisableInventory_ActionPerformed();
            Container_Deck.show(Container, "home");
        } else {
            Container_Deck.show(Container, "signIn");
        }
    }

    private void Invoicing_ActionPerformed() {
        INVO_Table.setModel(Function.invoTableModel());
        final TableColumnModel columnModel = INVO_Table.getColumnModel();
        for (int column = 0; column < INVO_Table.getColumnCount(); column++) {
            int width = 15;
            for (int row = 0; row < INVO_Table.getRowCount(); row++) {
                TableCellRenderer renderer = INVO_Table.getCellRenderer(row, column);
                Component comp = INVO_Table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1 , width);
            }
            if (width > 300) width=300;
            columnModel.getColumn(column).setPreferredWidth(width);
        }
        DisableInventory_ActionPerformed();
        Container_Deck.show(Container, "invMain");
    }

    private void NewInvoiceActionPerformed() {
        NI_Table.setModel(Function.newInvoTableModel());
        final TableColumnModel NewColumnModel = NI_Table.getColumnModel();
        for (int column = 0; column < NI_Table.getColumnCount(); column++) {
            int width = 15;
            for (int row = 0; row < NI_Table.getRowCount(); row++) {
                TableCellRenderer renderer = NI_Table.getCellRenderer(row, column);
                Component comp = NI_Table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1 , width);
            }
            if (width > 300) width=300;
            NewColumnModel.getColumn(column).setPreferredWidth(width);
        }
        NewColumnModel.getColumn(1).setMinWidth(0);
        NewColumnModel.getColumn(1).setMaxWidth(0);
        NewColumnModel.getColumn(1).setWidth(0);
        NewColumnModel.getColumn(4).setMinWidth(0);
        NewColumnModel.getColumn(4).setMaxWidth(0);
        NewColumnModel.getColumn(4).setWidth(0);
        NI_Customer_Name.setText("");
        NI_Customer_Contact.setText("");
        NI_Customer_Address.setText("");
        DisableInventory_ActionPerformed();
        Container_Deck.show(Container, "invNew");
    }

    private void Inventory_ActionPerformed() {
        INV_Table.setModel(Function.invenTableModel());
        final TableColumnModel columnModel = INV_Table.getColumnModel();
        for (int column = 0; column < INV_Table.getColumnCount(); column++) {
            int width = 15;
            for (int row = 0; row < INV_Table.getRowCount(); row++) {
                TableCellRenderer renderer = INV_Table.getCellRenderer(row, column);
                Component comp = INV_Table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1 , width);
            }
            if (width > 300) width=300;
            columnModel.getColumn(column).setPreferredWidth(width);
        }
        EnableInventory_ActionPerformed();
        Container_Deck.show(Container, "inventory");
    }

    private void Inventory_AddActionPerformed() {
        PID = "SPK-" + Function.randomID(4) + "-" + Function.randomID(4);
        NP_Heading.setText("Add New Product");
        NP_Product_Name.setText("");
        NP_Price.setText("");
        NP_GST_Rate.setText("");
        NP_Available_Quantity.setText("");
        DisableInventory_ActionPerformed();
        Container_Deck.show(Container, "invenNew");
    }

    private void Inventory_EditActionPerformed() {
        int row = INV_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select a Product to Edit it's Details.", "No Product Selected", JOptionPane.ERROR_MESSAGE);
        else {
            PID = INV_Table.getValueAt(row, 0).toString();
            NP_Heading.setText("Edit Product Details");
            NP_Product_Name.setText(INV_Table.getValueAt(row, 1).toString());
            NP_Price.setText(INV_Table.getValueAt(row, 2).toString());
            NP_GST_Rate.setText(INV_Table.getValueAt(row, 3).toString());
            NP_Available_Quantity.setText(INV_Table.getValueAt(row, 4).toString());
            DisableInventory_ActionPerformed();
            Container_Deck.show(Container, "invenNew");
        }
    }

    private void Inventory_RemoveActionPerformed() {
        int[] rows = INV_Table.getSelectedRows();
        if (rows.length == 0)
            JOptionPane.showMessageDialog(null, "Please Select atleast one Product to be Deleted.", "No Product Selected", JOptionPane.ERROR_MESSAGE);
        else {
            int response = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete selected Products?", "Delete Selected Products", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                for (int i = 0; i < rows.length; i++) {
                    SQLite.remRowInven(INV_Table.getValueAt(rows[i], 0).toString());
                }
                Inventory_ActionPerformed();
            }
        }
    }

    private void Inventory_UpdateActionPerformed() {
        int row = INV_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select a Product to Update it's Stock.", "No Product Selected", JOptionPane.ERROR_MESSAGE);
        else {
            PID = INV_Table.getValueAt(row, 0).toString();
            int quantity = 0;
            if (INV_Table.getValueAt(row, 4) != null)
                quantity = (Integer) INV_Table.getValueAt(row, 4);
            String update = JOptionPane.showInputDialog(null, "Enter the Amount of Stock You want to Increase", "Update Stock", JOptionPane.PLAIN_MESSAGE);
            if (update == null || update.equals(""))
                update = "0";
            String quan = Integer.toString(quantity + Integer.parseInt(update));
            SQLite.updateStock(PID, quan);
            Inventory_ActionPerformed();
        }
    }

    private void Settings_ActionPerformed() {
        SE_Current_Username.setText(new String(Base64.getDecoder().decode(SQLite.getConfigValue("Username"))));
        SE_Current_Business_Name.setText(SQLite.getConfigValue("Business Name"));
        SE_Current_Contact_Number.setText(SQLite.getConfigValue("Country Code") + "-" + SQLite.getConfigValue("Contact Number"));
        SE_Current_Email_Address.setText(SQLite.getConfigValue("Email Address"));
        SE_Current_Address.setText(SQLite.getConfigValue("Business Location"));
        DisableInventory_ActionPerformed();
        Container_Deck.show(Container, "settings");
    }

    private void About_ActionPerformed() {
        DisableInventory_ActionPerformed();
        Container_Deck.show(Container, "about");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the FlatLightLaf look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If FlatLightLaf is not available, stay with the default look and feel. */
        if (com.formdev.flatlaf.util.SystemInfo.isMacOS) {
            System.setProperty("apple.laf.useScreenMenuBar", "true");
            System.setProperty("apple.awt.application.name", "Speckle");
        }
        com.formdev.flatlaf.FlatLightLaf.setup();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("FlatLightLaf".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        javax.swing.UIManager.put("ScrollBar.thumbArc", 999);
        javax.swing.UIManager.put("ScrollBar.thumbInsets", new java.awt.Insets(2, 2, 2, 2));
        javax.swing.UIManager.put("TabbedPane.showTabSeparators", true);
        javax.swing.UIManager.put("TitlePane.unifiedBackground", false);
        javax.swing.UIManager.put("TextComponent.arc", 5 );
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
        
        Runtime.getRuntime().addShutdownHook(new Thread() {
            @Override
            public void run() {
                SQLite.closeMainDB();
                SQLite.closeConfigDB();
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane AB_Authors_Container;
    private javax.swing.JPanel AB_Authors_Tab;
    private javax.swing.JTextArea AB_Authors_Text;
    private javax.swing.JScrollPane AB_Credits_Container;
    private javax.swing.JPanel AB_Credits_Tab;
    private javax.swing.JTextArea AB_Credits_Text;
    private javax.swing.JLabel AB_Heading;
    private javax.swing.JScrollPane AB_License_Container;
    private javax.swing.JPanel AB_License_Tab;
    private javax.swing.JTextArea AB_License_Text;
    private javax.swing.JLabel AB_Logo;
    private javax.swing.JTabbedPane AB_TabbedPane;
    private javax.swing.JLabel AB_Version_Label;
    private javax.swing.JPanel About;
    private javax.swing.JPanel Container;
    private javax.swing.JButton FP_Cancel_Button;
    private javax.swing.JPasswordField FP_Confirm_Password;
    private javax.swing.JLabel FP_Confirm_Password_Label;
    private javax.swing.JLabel FP_Heading;
    private javax.swing.JPanel FP_New_Details;
    private javax.swing.JPasswordField FP_New_Password;
    private javax.swing.JLabel FP_New_Password_Label;
    private javax.swing.JLabel FP_Paragraph;
    private javax.swing.JTextField FP_Recovery_Key;
    private javax.swing.JLabel FP_Recovery_Key_Label;
    private javax.swing.JButton FP_Reset_Button;
    private javax.swing.JPanel Forgot_Password;
    private javax.swing.JPanel HOME_Banner;
    private javax.swing.JPanel HOME_Help;
    private javax.swing.JLabel HOME_Help_Content;
    private javax.swing.JLabel HOME_Help_Heading;
    private javax.swing.JLabel HOME_Help_Paragraph;
    private javax.swing.JPanel HOME_Low_Stock;
    private javax.swing.JLabel HOME_Low_Stock_Heading;
    private javax.swing.JLabel HOME_Low_Stock_Paragraph;
    private javax.swing.JLabel HOME_Main_Heading;
    private javax.swing.JLabel HOME_Product_Five_Label;
    private javax.swing.JLabel HOME_Product_Five_Quantity;
    private javax.swing.JLabel HOME_Product_Four_Label;
    private javax.swing.JLabel HOME_Product_Four_Quantity;
    private javax.swing.JLabel HOME_Product_One_Label;
    private javax.swing.JLabel HOME_Product_One_Quantity;
    private javax.swing.JLabel HOME_Product_Three_Label;
    private javax.swing.JLabel HOME_Product_Three_Quantity;
    private javax.swing.JLabel HOME_Product_Two_Label;
    private javax.swing.JLabel HOME_Product_Two_Quantity;
    private javax.swing.JPanel Home;
    private javax.swing.JButton INVO_Export_Button;
    private javax.swing.JLabel INVO_Heading;
    private javax.swing.JButton INVO_New_Invoice_Button;
    private javax.swing.JButton INVO_Remove_Button;
    private javax.swing.JTable INVO_Table;
    private javax.swing.JScrollPane INVO_Table_Container;
    private javax.swing.JButton INVO_View_Button;
    private javax.swing.JButton INV_Add_Button;
    private javax.swing.JButton INV_Edit_Button;
    private javax.swing.JButton INV_Export_Button;
    private javax.swing.JLabel INV_Heading;
    private javax.swing.JButton INV_Import_Button;
    private javax.swing.JButton INV_Remove_Button;
    private javax.swing.JTable INV_Table;
    private javax.swing.JScrollPane INV_Table_Container;
    private javax.swing.JButton INV_Update_Button;
    private javax.swing.JPanel Inventory;
    private javax.swing.JPanel Invoice;
    private javax.swing.JMenuItem MB_About;
    private javax.swing.JMenuItem MB_Exit;
    private javax.swing.JMenuItem MB_Export_Inventory;
    private javax.swing.JMenuItem MB_Export_Invoice;
    private javax.swing.JMenu MB_File_Menu;
    private javax.swing.JMenu MB_Help_Menu;
    private javax.swing.JMenuItem MB_INV_Add;
    private javax.swing.JMenuItem MB_INV_Edit;
    private javax.swing.JMenuItem MB_INV_Import;
    private javax.swing.JMenuItem MB_INV_Remove;
    private javax.swing.JMenuItem MB_INV_Update;
    private javax.swing.JMenuItem MB_Inventory;
    private javax.swing.JMenu MB_Inventory_Menu;
    private javax.swing.JMenuItem MB_Invoice_History;
    private javax.swing.JMenuItem MB_New_Invoice;
    private javax.swing.JPopupMenu.Separator MB_Separator_01;
    private javax.swing.JPopupMenu.Separator MB_Separator_02;
    private javax.swing.JPopupMenu.Separator MB_Separator_03;
    private javax.swing.JPopupMenu.Separator MB_Separator_04;
    private javax.swing.JMenuItem MB_Settings;
    private javax.swing.JMenuItem MB_Sign_Out;
    private javax.swing.JMenu MB_Tools_Menu;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JButton NI_Cancel_Button;
    private javax.swing.JButton NI_Create_Button;
    private javax.swing.JTextField NI_Customer_Address;
    private javax.swing.JLabel NI_Customer_Address_Label;
    private javax.swing.JTextField NI_Customer_Contact;
    private javax.swing.JLabel NI_Customer_Contact_Label;
    private javax.swing.JPanel NI_Customer_Details;
    private javax.swing.JTextField NI_Customer_Name;
    private javax.swing.JLabel NI_Customer_Name_Label;
    private javax.swing.JLabel NI_Heading;
    private javax.swing.JTable NI_Table;
    private javax.swing.JScrollPane NI_Table_Container;
    private javax.swing.JTextField NP_Available_Quantity;
    private javax.swing.JLabel NP_Available_Quantity_Label;
    private javax.swing.JButton NP_Cancel_Button;
    private javax.swing.JButton NP_Finish_Button;
    private javax.swing.JTextField NP_GST_Rate;
    private javax.swing.JLabel NP_GST_Rate_Label;
    private javax.swing.JLabel NP_Heading;
    private javax.swing.JTextField NP_Price;
    private javax.swing.JLabel NP_Price_Label;
    private javax.swing.JPanel NP_Product_Details;
    private javax.swing.JTextField NP_Product_Name;
    private javax.swing.JLabel NP_Product_Name_Label;
    private javax.swing.JPanel New_Invoice;
    private javax.swing.JPanel New_Product;
    private javax.swing.JButton SB_About_Button;
    private javax.swing.Box.Filler SB_Filler_01;
    private javax.swing.Box.Filler SB_Filler_02;
    private javax.swing.Box.Filler SB_Filler_03;
    private javax.swing.Box.Filler SB_Filler_04;
    private javax.swing.Box.Filler SB_Filler_05;
    private javax.swing.Box.Filler SB_Filler_06;
    private javax.swing.Box.Filler SB_Filler_07;
    private javax.swing.JButton SB_Home_Button;
    private javax.swing.JButton SB_Inventory_Button;
    private javax.swing.JButton SB_Invoicing_Button;
    private javax.swing.JButton SB_Settings_Button;
    private javax.swing.JButton SB_SignOut_Button;
    private javax.swing.JButton SD_Back_Button;
    private javax.swing.JPanel SD_Business_Details;
    private javax.swing.JTextField SD_Business_Location;
    private javax.swing.JLabel SD_Business_Location_Label;
    private javax.swing.JTextField SD_Business_Name;
    private javax.swing.JLabel SD_Business_Name_Label;
    private javax.swing.JTextField SD_Contact_Number;
    private javax.swing.JLabel SD_Contact_Number_Label;
    private javax.swing.JComboBox<String> SD_Country_Code;
    private javax.swing.JTextField SD_Email_Address;
    private javax.swing.JLabel SD_Email_Address_Label;
    private javax.swing.JLabel SD_Heading;
    private javax.swing.JLabel SD_Paragraph;
    private javax.swing.JButton SD_SignUp_Button;
    private javax.swing.JPanel SE_Business_Location;
    private javax.swing.JPanel SE_Business_Name;
    private javax.swing.JPanel SE_Business_Tab;
    private javax.swing.JButton SE_Change_Password_Button;
    private javax.swing.JButton SE_Change_Username_Button;
    private javax.swing.JPasswordField SE_Confirm_Password;
    private javax.swing.JLabel SE_Confirm_Password_Label;
    private javax.swing.JPanel SE_Contact_Number;
    private javax.swing.JTextField SE_Current_Address;
    private javax.swing.JLabel SE_Current_Address_Label;
    private javax.swing.JLabel SE_Current_Business_Label;
    private javax.swing.JTextField SE_Current_Business_Name;
    private javax.swing.JLabel SE_Current_Contact_Label;
    private javax.swing.JTextField SE_Current_Contact_Number;
    private javax.swing.JTextField SE_Current_Email_Address;
    private javax.swing.JLabel SE_Current_Email_Label;
    private javax.swing.JPasswordField SE_Current_Password;
    private javax.swing.JLabel SE_Current_Password_Label;
    private javax.swing.JTextField SE_Current_Username;
    private javax.swing.JLabel SE_Current_Username_Label;
    private javax.swing.JPanel SE_Email_Address;
    private javax.swing.JTextField SE_New_Address;
    private javax.swing.JLabel SE_New_Address_Label;
    private javax.swing.JLabel SE_New_Business_Label;
    private javax.swing.JTextField SE_New_Business_Name;
    private javax.swing.JLabel SE_New_Contact_Label;
    private javax.swing.JTextField SE_New_Contact_Number;
    private javax.swing.JComboBox<String> SE_New_Country_Code;
    private javax.swing.JTextField SE_New_Email_Address;
    private javax.swing.JLabel SE_New_Email_Label;
    private javax.swing.JPasswordField SE_New_Password;
    private javax.swing.JLabel SE_New_Password_Label;
    private javax.swing.JTextField SE_New_Username;
    private javax.swing.JLabel SE_New_Username_Label;
    private javax.swing.JPanel SE_Password;
    private javax.swing.JButton SE_Save_Changes_Button;
    private javax.swing.JTabbedPane SE_TabbedPane;
    private javax.swing.JPanel SE_User_Tab;
    private javax.swing.JPanel SE_Username;
    private javax.swing.JButton SI_Button;
    private javax.swing.JPanel SI_Form;
    private javax.swing.JLabel SI_Heading;
    private javax.swing.JLabel SI_Logo_01;
    private javax.swing.JLabel SI_Logo_02;
    private javax.swing.JLabel SI_Paragraph;
    private javax.swing.JPasswordField SI_Password;
    private javax.swing.JLabel SI_Sub_Heading;
    private javax.swing.JTextField SI_Username;
    private javax.swing.JPasswordField SM_Confirm_Password;
    private javax.swing.JLabel SM_Confirm_Password_Label;
    private javax.swing.JPasswordField SM_Create_Password;
    private javax.swing.JLabel SM_Create_Password_Label;
    private javax.swing.JLabel SM_Heading;
    private javax.swing.JButton SM_Next_Button;
    private javax.swing.JLabel SM_Paragraph_01;
    private javax.swing.JLabel SM_Paragraph_02;
    private javax.swing.JLabel SM_Sub_Heading;
    private javax.swing.JPanel SM_User_Details;
    private javax.swing.JTextField SM_Username;
    private javax.swing.JLabel SM_Username_Label;
    private javax.swing.JPanel Settings;
    private javax.swing.JToolBar SideBar;
    private javax.swing.JPanel SignIn;
    private javax.swing.JPanel SignUp_Details;
    private javax.swing.JPanel SignUp_Main;
    private javax.swing.JLabel VD_Business_Location;
    private javax.swing.JLabel VD_Business_Location_Label;
    private javax.swing.JLabel VD_Business_Name;
    private javax.swing.JLabel VD_Business_Name_Label;
    private javax.swing.JLabel VD_Contact_Number;
    private javax.swing.JLabel VD_Contact_Number_Label;
    private javax.swing.JLabel VD_Email_Address;
    private javax.swing.JLabel VD_Email_Address_Label;
    private javax.swing.JButton VD_Finish_Button;
    private javax.swing.Box.Filler VD_Finish_Filler;
    private javax.swing.JLabel VD_Heading;
    private javax.swing.JTextField VD_Recovery_Key;
    private javax.swing.JLabel VD_Recovery_Key_Heading;
    private javax.swing.JLabel VD_Recovery_Key_Paragraph;
    private javax.swing.JLabel VD_Username;
    private javax.swing.JLabel VD_Username_Label;
    private javax.swing.JPanel Verify_Details;
    // End of variables declaration//GEN-END:variables
    private final java.awt.CardLayout Container_Deck;
    private java.awt.Font SpaceMono;
    private boolean LoggedIn;
    private String PID;
}
