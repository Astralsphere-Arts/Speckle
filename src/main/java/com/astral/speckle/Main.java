package com.astral.speckle;

import java.awt.Component;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Astralsphere Arts
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Main() {
        LoggedIn = false;
        Version = "1.5.0";
        com.astral.internal.SQLite.initDB();
        initComponents();
        Container_Deck = (java.awt.CardLayout)Container.getLayout();
        if (com.astral.internal.SQLite.firstUse)
            Container_Deck.show(Container, "signUpUser");
        else
            Container_Deck.show(Container, "signIn");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SideBar = new javax.swing.JToolBar();
        Filler_01 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        Home_Button = new javax.swing.JButton();
        Filler_02 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        Invoicing_Button = new javax.swing.JButton();
        Filler_03 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        Inventory_Button = new javax.swing.JButton();
        Filler_04 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        Settings_Button = new javax.swing.JButton();
        Filler_05 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        About_Button = new javax.swing.JButton();
        Filler_06 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        SignOut_Button = new javax.swing.JButton();
        Filler_07 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));
        Container = new javax.swing.JPanel();
        SignIn = new javax.swing.JPanel();
        SignIn_Heading = new javax.swing.JLabel();
        SignIn_Para = new javax.swing.JLabel();
        SignIn_SubHeading = new javax.swing.JLabel();
        Username_Label = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        Password_Label = new javax.swing.JLabel();
        Password = new javax.swing.JPasswordField();
        SignIn_Button = new javax.swing.JButton();
        Forgot_Password_Label = new javax.swing.JLabel();
        SignUp_User = new javax.swing.JPanel();
        SignUp_User_Heading = new javax.swing.JLabel();
        SignUp_User_SubHeading = new javax.swing.JLabel();
        SignUp_User_Para_A = new javax.swing.JLabel();
        SignUp_User_Para_B = new javax.swing.JLabel();
        SignUp_User_SubPanel = new javax.swing.JPanel();
        SignUp_Username_Label = new javax.swing.JLabel();
        SignUp_Username = new javax.swing.JTextField();
        Create_Password_Label = new javax.swing.JLabel();
        Create_Password = new javax.swing.JPasswordField();
        Confirm_Password_Label = new javax.swing.JLabel();
        Confirm_Password = new javax.swing.JPasswordField();
        Next_Button = new javax.swing.JButton();
        SignUp_Details = new javax.swing.JPanel();
        SignUp_Details_Heading = new javax.swing.JLabel();
        SignUp_Details_Para = new javax.swing.JLabel();
        Business_Name_Label = new javax.swing.JLabel();
        Business_Name = new javax.swing.JTextField();
        Contact_Number_Label = new javax.swing.JLabel();
        Contact_Number = new javax.swing.JTextField();
        Email_Address_Label = new javax.swing.JLabel();
        Email_Address = new javax.swing.JTextField();
        Business_Location_Label = new javax.swing.JLabel();
        Business_Location = new javax.swing.JTextField();
        Back_Button = new javax.swing.JButton();
        SignUp_Button = new javax.swing.JButton();
        Verify_Details = new javax.swing.JPanel();
        Verify_Details_Heading = new javax.swing.JLabel();
        Verify_Username_Label = new javax.swing.JLabel();
        Verify_Username = new javax.swing.JLabel();
        Verify_Business_Name_Label = new javax.swing.JLabel();
        Verify_Business_Name = new javax.swing.JLabel();
        Verify_Contact_Number_Label = new javax.swing.JLabel();
        Verfiy_Contact_Number = new javax.swing.JLabel();
        Verify_Email_Address_Label = new javax.swing.JLabel();
        Verify_Email_Address = new javax.swing.JLabel();
        Verify_Business_Location_Label = new javax.swing.JLabel();
        Verify_Business_Location = new javax.swing.JLabel();
        Recovery_Key_Heading = new javax.swing.JLabel();
        Recovery_Key_Para = new javax.swing.JLabel();
        Recovery_Key_Display_Label = new javax.swing.JLabel();
        Finish_Button = new javax.swing.JButton();
        Forgot_Password = new javax.swing.JPanel();
        Forgot_Password_Heading = new javax.swing.JLabel();
        Forgot_Password_Para = new javax.swing.JLabel();
        Recovery_Key_Label = new javax.swing.JLabel();
        Recovery_Key = new javax.swing.JTextField();
        New_Password_Label = new javax.swing.JLabel();
        New_Password = new javax.swing.JPasswordField();
        Confirm_Passwd_Label = new javax.swing.JLabel();
        Confirm_Passwd = new javax.swing.JPasswordField();
        Cancel_Button = new javax.swing.JButton();
        Reset_Button = new javax.swing.JButton();
        Home_Page = new javax.swing.JPanel();
        Banner = new javax.swing.JPanel();
        Speckle_Label = new javax.swing.JLabel();
        Help = new javax.swing.JPanel();
        Help_Label = new javax.swing.JLabel();
        Help_Para = new javax.swing.JLabel();
        Help_Content = new javax.swing.JLabel();
        Low_Stock = new javax.swing.JPanel();
        Low_Stock_Label = new javax.swing.JLabel();
        Low_Stock_Para = new javax.swing.JLabel();
        Product_One_Label = new javax.swing.JLabel();
        Product_One_Quantity = new javax.swing.JLabel();
        Product_Two_Label = new javax.swing.JLabel();
        Product_Two_Quantity = new javax.swing.JLabel();
        Product_Three_Label = new javax.swing.JLabel();
        Product_Three_Quantity = new javax.swing.JLabel();
        Product_Four_Label = new javax.swing.JLabel();
        Product_Four_Quantity = new javax.swing.JLabel();
        Product_Five_Label = new javax.swing.JLabel();
        Product_Five_Quantity = new javax.swing.JLabel();
        Invoice_Main = new javax.swing.JPanel();
        Main_Heading = new javax.swing.JLabel();
        New_Invoice = new javax.swing.JButton();
        Invoice_Table_Container = new javax.swing.JScrollPane();
        Invoice_Table = new javax.swing.JTable();
        View = new javax.swing.JButton();
        Remove1 = new javax.swing.JButton();
        Export_Invoice = new javax.swing.JButton();
        Invoice_New = new javax.swing.JPanel();
        New_Heading = new javax.swing.JLabel();
        Customer_Details_Panel = new javax.swing.JPanel();
        Customer_Name_Label = new javax.swing.JLabel();
        Customer_Name = new javax.swing.JTextField();
        Customer_Contact_Label = new javax.swing.JLabel();
        Customer_Contact = new javax.swing.JTextField();
        Customer_Address_Label = new javax.swing.JLabel();
        Customer_Address = new javax.swing.JTextField();
        New_Invoice_Table_Container = new javax.swing.JScrollPane();
        New_Invoice_Table = new javax.swing.JTable();
        Cancel = new javax.swing.JButton();
        Create_Invoice = new javax.swing.JButton();
        Inventory_Page = new javax.swing.JPanel();
        Heading = new javax.swing.JLabel();
        Inventory_Table_Container = new javax.swing.JScrollPane();
        Inventory_Table = new javax.swing.JTable();
        Add = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Remove = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Import = new javax.swing.JButton();
        Export_Inventory = new javax.swing.JButton();
        Inventory_New = new javax.swing.JPanel();
        New_Product_Heading = new javax.swing.JLabel();
        New_Product_Panel = new javax.swing.JPanel();
        Product_Name_Label = new javax.swing.JLabel();
        Product_Name = new javax.swing.JTextField();
        Price_Label = new javax.swing.JLabel();
        Price_Field = new javax.swing.JTextField();
        GST_Rate_Label = new javax.swing.JLabel();
        GST_Rate = new javax.swing.JTextField();
        Available_Quantity_Label = new javax.swing.JLabel();
        Available_Quantity = new javax.swing.JTextField();
        Cancel_Adding = new javax.swing.JButton();
        Finish_Adding = new javax.swing.JButton();
        Settings_Page = new javax.swing.JPanel();
        Settings_Container = new javax.swing.JTabbedPane();
        User_Tab = new javax.swing.JPanel();
        Speckle_Logo1 = new javax.swing.JLabel();
        Change_Username = new javax.swing.JLabel();
        Current_Username_Label = new javax.swing.JLabel();
        Current_Username = new javax.swing.JTextField();
        New_Username_Label = new javax.swing.JLabel();
        New_Username = new javax.swing.JTextField();
        Change_Username_Button = new javax.swing.JButton();
        Change_Password = new javax.swing.JLabel();
        Current_Password_Label = new javax.swing.JLabel();
        Current_Password = new javax.swing.JPasswordField();
        New_Password_Label1 = new javax.swing.JLabel();
        New_Password1 = new javax.swing.JPasswordField();
        Confirm_Password_Label1 = new javax.swing.JLabel();
        Confirm_Password1 = new javax.swing.JPasswordField();
        Change_Password_Button = new javax.swing.JButton();
        Reset_Button1 = new javax.swing.JButton();
        Details_Tab = new javax.swing.JPanel();
        Update_Business_Details = new javax.swing.JLabel();
        Current_Value_Label = new javax.swing.JLabel();
        New_Value_Label = new javax.swing.JLabel();
        Business_Name_Label1 = new javax.swing.JLabel();
        Current_Business_Name = new javax.swing.JTextField();
        New_Business_Name = new javax.swing.JTextField();
        Contact_Number_Label1 = new javax.swing.JLabel();
        Current_Contact_Number = new javax.swing.JTextField();
        New_Contact_Number = new javax.swing.JTextField();
        Email_Address_Label1 = new javax.swing.JLabel();
        Current_Email_Address = new javax.swing.JTextField();
        New_Email_Address = new javax.swing.JTextField();
        Business_Location_Label1 = new javax.swing.JLabel();
        Current_Business_Location_Label = new javax.swing.JLabel();
        Current_Business_Location = new javax.swing.JTextField();
        New_Business_Location_Label = new javax.swing.JLabel();
        New_Business_Location = new javax.swing.JTextField();
        Save_Changes_Button = new javax.swing.JButton();
        About_Page = new javax.swing.JPanel();
        Speckle_Logo = new javax.swing.JLabel();
        About_Heading = new javax.swing.JLabel();
        Version_Label = new javax.swing.JLabel();
        About_Para = new javax.swing.JLabel();
        About_Container = new javax.swing.JTabbedPane();
        Authors_Tab = new javax.swing.JPanel();
        Authors_Container = new javax.swing.JScrollPane();
        Authors_Text = new javax.swing.JTextArea();
        License_Tab = new javax.swing.JPanel();
        License_Container = new javax.swing.JScrollPane();
        License_Text = new javax.swing.JTextArea();
        Credits_Tab = new javax.swing.JPanel();
        Credits_Container = new javax.swing.JScrollPane();
        Credits_Text = new javax.swing.JTextArea();
        MenuBar = new javax.swing.JMenuBar();
        File_Menu = new javax.swing.JMenu();
        SignOut_MenuItem = new javax.swing.JMenuItem();
        Separator_01 = new javax.swing.JPopupMenu.Separator();
        Exit_MenuItem = new javax.swing.JMenuItem();
        Edit_Menu = new javax.swing.JMenu();
        Help_Menu = new javax.swing.JMenu();
        About_MenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Speckle");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/images/speckle-frame-logo.png")).getImage());
        setMinimumSize(new java.awt.Dimension(1100, 650));

        SideBar.setBackground(new java.awt.Color(255, 255, 255));
        SideBar.setOrientation(javax.swing.SwingConstants.VERTICAL);
        SideBar.setRollover(true);
        SideBar.add(Filler_01);

        Home_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/house_3d.png"))); // NOI18N
        Home_Button.setFocusable(false);
        Home_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Home_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Home_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Home_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(Home_Button);
        SideBar.add(Filler_02);

        Invoicing_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/scroll_3d.png"))); // NOI18N
        Invoicing_Button.setEnabled(false);
        Invoicing_Button.setFocusable(false);
        Invoicing_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Invoicing_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Invoicing_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Invoicing_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(Invoicing_Button);
        SideBar.add(Filler_03);

        Inventory_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/package_3d.png"))); // NOI18N
        Inventory_Button.setEnabled(false);
        Inventory_Button.setFocusable(false);
        Inventory_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Inventory_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Inventory_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Inventory_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(Inventory_Button);
        SideBar.add(Filler_04);

        Settings_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gear_3d.png"))); // NOI18N
        Settings_Button.setEnabled(false);
        Settings_Button.setFocusable(false);
        Settings_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Settings_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Settings_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Settings_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(Settings_Button);
        SideBar.add(Filler_05);

        About_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bubbles_3d.png"))); // NOI18N
        About_Button.setFocusable(false);
        About_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        About_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        About_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                About_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(About_Button);
        SideBar.add(Filler_06);

        SignOut_Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/high_voltage_3d.png"))); // NOI18N
        SignOut_Button.setEnabled(false);
        SignOut_Button.setFocusable(false);
        SignOut_Button.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        SignOut_Button.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        SignOut_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignOut_ButtonActionPerformed(evt);
            }
        });
        SideBar.add(SignOut_Button);
        SideBar.add(Filler_07);

        Container.setLayout(new java.awt.CardLayout());

        SignIn_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 30)); // NOI18N
        SignIn_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignIn_Heading.setText("Welcome To Speckle!");
        SignIn_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SignIn_Para.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SignIn_Para.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignIn_Para.setText("A Simple Invoicing and Inventory Management System");
        SignIn_Para.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SignIn_SubHeading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        SignIn_SubHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignIn_SubHeading.setText("Please Sign In");
        SignIn_SubHeading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Username_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Username_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Username_Label.setText("Username");
        Username_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Password_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Password_Label.setText("Password");
        Password_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        SignIn_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        SignIn_Button.setText("Sign In");
        SignIn_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignIn_ButtonActionPerformed(evt);
            }
        });

        Forgot_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        Forgot_Password_Label.setForeground(new java.awt.Color(0, 102, 255));
        Forgot_Password_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Forgot_Password_Label.setText("Forgot Password?");
        Forgot_Password_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Forgot_Password_Label.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                Forgot_Password_LabelMouseMoved(evt);
            }
        });
        Forgot_Password_Label.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Forgot_Password_LabelMousePressed(evt);
            }
        });

        javax.swing.GroupLayout SignInLayout = new javax.swing.GroupLayout(SignIn);
        SignIn.setLayout(SignInLayout);
        SignInLayout.setHorizontalGroup(
            SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignInLayout.createSequentialGroup()
                .addContainerGap(240, Short.MAX_VALUE)
                .addGroup(SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(SignIn_SubHeading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SignIn_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SignIn_Para, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SignInLayout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Username)
                            .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SignIn_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Forgot_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(270, Short.MAX_VALUE))
        );
        SignInLayout.setVerticalGroup(
            SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SignInLayout.createSequentialGroup()
                .addContainerGap(115, Short.MAX_VALUE)
                .addComponent(SignIn_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SignIn_Para)
                .addGap(55, 55, 55)
                .addComponent(SignIn_SubHeading)
                .addGap(18, 18, 18)
                .addGroup(SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(SignIn_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Forgot_Password_Label)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        Container.add(SignIn, "signIn");

        SignUp_User_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 30)); // NOI18N
        SignUp_User_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignUp_User_Heading.setText("Welcome To Speckle!");
        SignUp_User_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SignUp_User_SubHeading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SignUp_User_SubHeading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignUp_User_SubHeading.setText("A Simple Invoicing and Inventory Management System");
        SignUp_User_SubHeading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SignUp_User_Para_A.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        SignUp_User_Para_A.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignUp_User_Para_A.setText("Since this is your first time using Speckle, we need some details to set things up for you.");
        SignUp_User_Para_A.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SignUp_User_Para_B.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        SignUp_User_Para_B.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignUp_User_Para_B.setText("First, create a Username and Password for yourself that you'll be using every time you use Speckle.");
        SignUp_User_Para_B.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SignUp_User_SubPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        SignUp_Username_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        SignUp_Username_Label.setText("Your Username");
        SignUp_Username_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SignUp_Username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Create_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Create_Password_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Create_Password_Label.setText("Create Password");
        Create_Password_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Create_Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Confirm_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Confirm_Password_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Confirm_Password_Label.setText("Confirm Password");
        Confirm_Password_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Confirm_Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Next_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Next_Button.setText("Next");
        Next_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Next_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SignUp_User_SubPanelLayout = new javax.swing.GroupLayout(SignUp_User_SubPanel);
        SignUp_User_SubPanel.setLayout(SignUp_User_SubPanelLayout);
        SignUp_User_SubPanelLayout.setHorizontalGroup(
            SignUp_User_SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_User_SubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SignUp_User_SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignUp_User_SubPanelLayout.createSequentialGroup()
                        .addGroup(SignUp_User_SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Create_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SignUp_User_SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Create_Password)
                            .addComponent(Confirm_Password)))
                    .addGroup(SignUp_User_SubPanelLayout.createSequentialGroup()
                        .addComponent(SignUp_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SignUp_Username)))
                .addContainerGap())
            .addGroup(SignUp_User_SubPanelLayout.createSequentialGroup()
                .addGap(288, 288, 288)
                .addComponent(Next_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SignUp_User_SubPanelLayout.setVerticalGroup(
            SignUp_User_SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_User_SubPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SignUp_User_SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SignUp_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SignUp_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUp_User_SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Create_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Create_Password))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUp_User_SubPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Confirm_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Confirm_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Next_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout SignUp_UserLayout = new javax.swing.GroupLayout(SignUp_User);
        SignUp_User.setLayout(SignUp_UserLayout);
        SignUp_UserLayout.setHorizontalGroup(
            SignUp_UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_UserLayout.createSequentialGroup()
                .addContainerGap(125, Short.MAX_VALUE)
                .addGroup(SignUp_UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(SignUp_User_Para_A, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SignUp_User_SubHeading, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SignUp_User_Heading, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SignUp_User_Para_B, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addComponent(SignUp_User_SubPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        SignUp_UserLayout.setVerticalGroup(
            SignUp_UserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_UserLayout.createSequentialGroup()
                .addContainerGap(80, Short.MAX_VALUE)
                .addComponent(SignUp_User_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SignUp_User_SubHeading)
                .addGap(32, 32, 32)
                .addComponent(SignUp_User_Para_A)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SignUp_User_Para_B)
                .addGap(30, 30, 30)
                .addComponent(SignUp_User_SubPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        Container.add(SignUp_User, "signUpUser");

        SignUp_Details_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        SignUp_Details_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignUp_Details_Heading.setText("Just a little more and you'll be all ready to go.");
        SignUp_Details_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        SignUp_Details_Para.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        SignUp_Details_Para.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SignUp_Details_Para.setText("<html><p style=\"text-align: center;\">Now, please provide some details about your Business.<br> This information will be used for the Invoices you generate using<br>Speckle.</p></html>");
        SignUp_Details_Para.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Business_Name_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Business_Name_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Business_Name_Label.setText("Business Name");
        Business_Name_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Business_Name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Contact_Number_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Contact_Number_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Contact_Number_Label.setText("Contact Number");
        Contact_Number_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Contact_Number.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Contact_Number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Contact_NumberKeyPressed(evt);
            }
        });

        Email_Address_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Email_Address_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Email_Address_Label.setText("Email Address");
        Email_Address_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Email_Address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Business_Location_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Business_Location_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Business_Location_Label.setText("<html><p>Business Location<br>(Address)</p></html>");
        Business_Location_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Business_Location.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Back_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Back_Button.setText("Back");
        Back_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_ButtonActionPerformed(evt);
            }
        });

        SignUp_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        SignUp_Button.setText("Sign Up");
        SignUp_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUp_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SignUp_DetailsLayout = new javax.swing.GroupLayout(SignUp_Details);
        SignUp_Details.setLayout(SignUp_DetailsLayout);
        SignUp_DetailsLayout.setHorizontalGroup(
            SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SignUp_Details_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE)
                            .addComponent(SignUp_Details_Para)))
                    .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                                .addComponent(Email_Address_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Email_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                                .addComponent(Business_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Business_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                                .addComponent(Contact_Number_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Contact_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                                .addComponent(Business_Location_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Business_Location))
                            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(Back_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(SignUp_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        SignUp_DetailsLayout.setVerticalGroup(
            SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SignUp_DetailsLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(SignUp_Details_Heading)
                .addGap(18, 18, 18)
                .addComponent(SignUp_Details_Para, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Business_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Business_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Contact_Number_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Contact_Number))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Email_Address_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Email_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Business_Location_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(Business_Location))
                .addGap(36, 36, 36)
                .addGroup(SignUp_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SignUp_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Back_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(109, Short.MAX_VALUE))
        );

        Container.add(SignUp_Details, "signUpDetails");

        Verify_Details_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Verify_Details_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Verify_Details_Heading.setText("Please Verify Your Details");
        Verify_Details_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Verify_Username_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Verify_Username_Label.setText("User Name");

        Verify_Username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Verify_Business_Name_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Verify_Business_Name_Label.setText("Business Name");

        Verify_Business_Name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Verify_Contact_Number_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Verify_Contact_Number_Label.setText("Contact Number");

        Verfiy_Contact_Number.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Verify_Email_Address_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Verify_Email_Address_Label.setText("Email Address");

        Verify_Email_Address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Verify_Business_Location_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Verify_Business_Location_Label.setText("Business Location");

        Verify_Business_Location.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Recovery_Key_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Recovery_Key_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Recovery_Key_Heading.setText("Recovery Key");
        Recovery_Key_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Recovery_Key_Para.setFont(new java.awt.Font("Segoe UI Semibold", 0, 11)); // NOI18N
        Recovery_Key_Para.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Recovery_Key_Para.setText("Following Is Your Recovery Key Code For Password Recovery. Please Keep This Code Safe and Do not Share This Code With Anyone.");

        Recovery_Key_Display_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Recovery_Key_Display_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Recovery_Key_Display_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Finish_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Finish_Button.setText("Finish");
        Finish_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Finish_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Verify_DetailsLayout = new javax.swing.GroupLayout(Verify_Details);
        Verify_Details.setLayout(Verify_DetailsLayout);
        Verify_DetailsLayout.setHorizontalGroup(
            Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Verify_DetailsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Recovery_Key_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Verify_Details_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                    .addComponent(Recovery_Key_Display_Label, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Recovery_Key_Para, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, Verify_DetailsLayout.createSequentialGroup()
                        .addComponent(Verify_Business_Location_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(Verify_DetailsLayout.createSequentialGroup()
                        .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Verify_Username_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Verify_Business_Name_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Verify_Email_Address_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Verify_Contact_Number_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Verify_Username, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Verify_Business_Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Verfiy_Contact_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Verify_Email_Address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Verify_Business_Location, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(60, 60, 60))
            .addGroup(Verify_DetailsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Finish_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Verify_DetailsLayout.setVerticalGroup(
            Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Verify_DetailsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(Verify_Details_Heading)
                .addGap(30, 30, 30)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Verify_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Verify_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Verify_Business_Name_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(Verify_Business_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Verify_Contact_Number_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(Verfiy_Contact_Number, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Verify_Email_Address_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
                    .addComponent(Verify_Email_Address, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(Verify_DetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Verify_Business_Location_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Verify_Business_Location, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(Recovery_Key_Heading)
                .addGap(18, 18, 18)
                .addComponent(Recovery_Key_Para, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Recovery_Key_Display_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Finish_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        Container.add(Verify_Details, "verifyDetails");

        Forgot_Password_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Forgot_Password_Heading.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Forgot_Password_Heading.setText("Forgot Password");
        Forgot_Password_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Forgot_Password_Para.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        Forgot_Password_Para.setText("<html><p style=\"text-align: center;\">If You've Forgotten Your Password. Then Enter the Recovery Code that had been Given to You on the First Use and then You can create a New Password.</p></html>");

        Recovery_Key_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Recovery_Key_Label.setText("Recovery Key");

        Recovery_Key.setPreferredSize(new java.awt.Dimension(7, 26));

        New_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        New_Password_Label.setText("New Password");

        New_Password.setPreferredSize(new java.awt.Dimension(7, 26));

        Confirm_Passwd_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Confirm_Passwd_Label.setText("Confirm Password");

        Confirm_Passwd.setPreferredSize(new java.awt.Dimension(7, 26));

        Cancel_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Cancel_Button.setText("Cancel");
        Cancel_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_ButtonActionPerformed(evt);
            }
        });

        Reset_Button.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Reset_Button.setText("Reset");
        Reset_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Forgot_PasswordLayout = new javax.swing.GroupLayout(Forgot_Password);
        Forgot_Password.setLayout(Forgot_PasswordLayout);
        Forgot_PasswordLayout.setHorizontalGroup(
            Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Forgot_PasswordLayout.createSequentialGroup()
                .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Forgot_PasswordLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Forgot_Password_Para, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(Forgot_Password_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)))
                    .addGroup(Forgot_PasswordLayout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Recovery_Key_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(New_Password_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Confirm_Passwd_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Recovery_Key, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                            .addComponent(New_Password, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Confirm_Passwd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(Forgot_PasswordLayout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Reset_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(502, Short.MAX_VALUE))
        );
        Forgot_PasswordLayout.setVerticalGroup(
            Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Forgot_PasswordLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(Forgot_Password_Heading)
                .addGap(18, 18, 18)
                .addComponent(Forgot_Password_Para, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Recovery_Key_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Recovery_Key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Confirm_Passwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Confirm_Passwd_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(Forgot_PasswordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Reset_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancel_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(145, Short.MAX_VALUE))
        );

        Container.add(Forgot_Password, "forgotPassword");
        Forgot_Password.getAccessibleContext().setAccessibleName("");

        Banner.setBackground(new java.awt.Color(253, 253, 253));
        Banner.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(180, 180, 180), 1, true));

        Speckle_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 30)); // NOI18N
        Speckle_Label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Speckle_Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/speckle-home-logo.png"))); // NOI18N
        Speckle_Label.setText("Speckle: Simple Invoicing & Inventory Management");

        javax.swing.GroupLayout BannerLayout = new javax.swing.GroupLayout(Banner);
        Banner.setLayout(BannerLayout);
        BannerLayout.setHorizontalGroup(
            BannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BannerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Speckle_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        BannerLayout.setVerticalGroup(
            BannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BannerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Speckle_Label, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addContainerGap())
        );

        Help.setBackground(new java.awt.Color(248, 248, 248));
        Help.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(180, 180, 180), 1, true));

        Help_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Help_Label.setText("Quick Start Guide");

        Help_Content.setText("<html><ol style=\"margin: 0 0 0 20;\">\n<li style=\"padding: 4;\">The First Tab is <b>Home</b> which has two Sections one is Quick Start Guide(This One) and second one is has Information\nabout Products with Low amount Stocks in the Inventory.</li>\n<li style=\"padding: 4;\">The Second Tab is <b>Invoicing</b> through which you can create new Invoices or can view previously created Invoices.</li>\n<li style=\"padding: 4;\">The Third Tab is <b>Inventory</b> where you can add or remove Products from Speckle's Inventory.</li>\n<li style=\"padding: 4;\">The Forth Tab is <b>Settings</b> where you can change your Login Credentials and the information related to your\nBusiness that gets printed on your Invoices.</li>\n<li style=\"padding: 4;\">The Last Tab is <b>About</b> which has three Sections Authors, License, Credits they contain a List of Developers who\nContributed to Speckle, the EULA and Credits to the External Libraries we used.</li>\n</ol></html>");
        Help_Content.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Help_Content.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout HelpLayout = new javax.swing.GroupLayout(Help);
        Help.setLayout(HelpLayout);
        HelpLayout.setHorizontalGroup(
            HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HelpLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Help_Para, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Help_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Help_Content, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HelpLayout.setVerticalGroup(
            HelpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HelpLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Help_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Help_Para, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Help_Content, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Low_Stock.setBackground(new java.awt.Color(248, 248, 248));
        Low_Stock.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(180, 180, 180), 1, true));

        Low_Stock_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Low_Stock_Label.setText("Low Stock");

        Low_Stock_Para.setText("<html><p>The following five Products have the least amount of Stock available. If you think you might run out of stock for a Product then please Restock.</p></html>");

        Product_One_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        Product_One_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Product_One_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Product_One_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        Product_Two_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        Product_Two_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Product_Two_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Product_Two_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        Product_Three_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        Product_Three_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Product_Three_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Product_Three_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        Product_Four_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        Product_Four_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Product_Four_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Product_Four_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        Product_Five_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N

        Product_Five_Quantity.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Product_Five_Quantity.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Product_Five_Quantity.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout Low_StockLayout = new javax.swing.GroupLayout(Low_Stock);
        Low_Stock.setLayout(Low_StockLayout);
        Low_StockLayout.setHorizontalGroup(
            Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Low_StockLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Low_StockLayout.createSequentialGroup()
                        .addComponent(Product_Five_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Product_Five_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Low_StockLayout.createSequentialGroup()
                        .addComponent(Product_Four_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Product_Four_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Low_StockLayout.createSequentialGroup()
                        .addComponent(Product_Three_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Product_Three_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Low_StockLayout.createSequentialGroup()
                        .addComponent(Product_Two_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Product_Two_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Low_Stock_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Low_StockLayout.createSequentialGroup()
                        .addComponent(Product_One_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Product_One_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Low_Stock_Para, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        Low_StockLayout.setVerticalGroup(
            Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Low_StockLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(Low_Stock_Label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Low_Stock_Para, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Product_One_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_One_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Product_Two_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Two_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Product_Three_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Three_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Product_Four_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Four_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Low_StockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Product_Five_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Five_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Home_PageLayout = new javax.swing.GroupLayout(Home_Page);
        Home_Page.setLayout(Home_PageLayout);
        Home_PageLayout.setHorizontalGroup(
            Home_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Home_PageLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(Home_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Banner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Home_PageLayout.createSequentialGroup()
                        .addComponent(Help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Low_Stock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        Home_PageLayout.setVerticalGroup(
            Home_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Home_PageLayout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(Banner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Home_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Low_Stock, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        Container.add(Home_Page, "home");

        Main_Heading.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Main_Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Main_Heading.setText("Invoice");
        Main_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        New_Invoice.setFont(New_Invoice.getFont().deriveFont((float)14));
        New_Invoice.setText("New Invoice");
        New_Invoice.setToolTipText("Generate a New Invoice");
        New_Invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                New_InvoiceActionPerformed(evt);
            }
        });

        Invoice_Table.setShowGrid(true);
        Invoice_Table.getTableHeader().setReorderingAllowed(false);
        Invoice_Table_Container.setViewportView(Invoice_Table);

        View.setText("View Invoice");
        View.setToolTipText("View Selected Invoice from Invoice List");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        Remove1.setText("Remove");
        Remove1.setToolTipText("Remove Selected Invoices from Invoice List");
        Remove1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remove1ActionPerformed(evt);
            }
        });

        Export_Invoice.setText("Export");
        Export_Invoice.setToolTipText("Export Invoice List to a CSV File");
        Export_Invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_InvoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Invoice_MainLayout = new javax.swing.GroupLayout(Invoice_Main);
        Invoice_Main.setLayout(Invoice_MainLayout);
        Invoice_MainLayout.setHorizontalGroup(
            Invoice_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Invoice_MainLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(Invoice_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Invoice_MainLayout.createSequentialGroup()
                        .addComponent(Main_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(New_Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Invoice_MainLayout.createSequentialGroup()
                        .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Remove1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Export_Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Invoice_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 846, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        Invoice_MainLayout.setVerticalGroup(
            Invoice_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Invoice_MainLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(Invoice_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Main_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Invoice_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(Invoice_MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Remove1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Export_Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        Container.add(Invoice_Main, "invMain");

        New_Heading.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        New_Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        New_Heading.setText("New Invoice");
        New_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        Customer_Details_Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Customer_Name_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Customer_Name_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Customer_Name_Label.setText("Customer's Name");
        Customer_Name_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Customer_Contact_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Customer_Contact_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Customer_Contact_Label.setText("Contact Number");
        Customer_Contact_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Customer_Contact.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Customer_ContactKeyPressed(evt);
            }
        });

        Customer_Address_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        Customer_Address_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Customer_Address_Label.setText("Customer's Address");
        Customer_Address_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout Customer_Details_PanelLayout = new javax.swing.GroupLayout(Customer_Details_Panel);
        Customer_Details_Panel.setLayout(Customer_Details_PanelLayout);
        Customer_Details_PanelLayout.setHorizontalGroup(
            Customer_Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Customer_Details_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Customer_Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Customer_Name_Label)
                    .addComponent(Customer_Address_Label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Customer_Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Customer_Details_PanelLayout.createSequentialGroup()
                        .addComponent(Customer_Name, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(Customer_Contact_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Customer_Contact, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Customer_Address))
                .addContainerGap())
        );
        Customer_Details_PanelLayout.setVerticalGroup(
            Customer_Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Customer_Details_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Customer_Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Customer_Name_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Customer_Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Customer_Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Customer_Contact_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Customer_Contact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Customer_Details_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Customer_Address_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Customer_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        New_Invoice_Table.setShowGrid(true);
        New_Invoice_Table.getTableHeader().setReorderingAllowed(false);
        New_Invoice_Table_Container.setViewportView(New_Invoice_Table);

        Cancel.setText("Cancel");
        Cancel.setToolTipText("Return to Invoice List");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        Create_Invoice.setText("Create Invoice");
        Create_Invoice.setToolTipText("Create a New Invoice using given Data");
        Create_Invoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Create_InvoiceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Invoice_NewLayout = new javax.swing.GroupLayout(Invoice_New);
        Invoice_New.setLayout(Invoice_NewLayout);
        Invoice_NewLayout.setHorizontalGroup(
            Invoice_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Invoice_NewLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(Invoice_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Customer_Details_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Invoice_NewLayout.createSequentialGroup()
                        .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Create_Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(New_Invoice_Table_Container))
                .addGap(60, 60, 60))
        );
        Invoice_NewLayout.setVerticalGroup(
            Invoice_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Invoice_NewLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(New_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Customer_Details_Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(New_Invoice_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(Invoice_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Create_Invoice, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        Container.add(Invoice_New, "invNew");

        Heading.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        Heading.setText("Inventory");
        Heading.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        Inventory_Table.setShowGrid(true);
        Inventory_Table.getTableHeader().setReorderingAllowed(false);
        Inventory_Table_Container.setViewportView(Inventory_Table);

        Add.setText("Add");
        Add.setToolTipText("Add a New Product to Inventory");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Edit.setText("Edit");
        Edit.setToolTipText("Add a New Product to Inventory");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Remove.setText("Remove");
        Remove.setToolTipText("Remove Selected Products from Inventory");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        Update.setText("Update Stock");
        Update.setToolTipText("Increase Available Quantity for Selected Product");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        Import.setText("Import");
        Import.setToolTipText("Import Inventory Data from a CSV File");
        Import.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportActionPerformed(evt);
            }
        });

        Export_Inventory.setText("Export");
        Export_Inventory.setToolTipText("Export Inventory Data to a CSV File");
        Export_Inventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Export_InventoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Inventory_PageLayout = new javax.swing.GroupLayout(Inventory_Page);
        Inventory_Page.setLayout(Inventory_PageLayout);
        Inventory_PageLayout.setHorizontalGroup(
            Inventory_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_PageLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(Inventory_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Inventory_PageLayout.createSequentialGroup()
                        .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Inventory_PageLayout.createSequentialGroup()
                        .addGroup(Inventory_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Inventory_PageLayout.createSequentialGroup()
                                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addComponent(Import, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Export_Inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Inventory_Table_Container))
                        .addGap(60, 60, 60))))
        );
        Inventory_PageLayout.setVerticalGroup(
            Inventory_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Inventory_PageLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Inventory_Table_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(Inventory_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Update, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Export_Inventory, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Import, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Edit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        Container.add(Inventory_Page, "inventory");

        New_Product_Heading.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        New_Product_Heading.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        New_Product_Heading.setText("Add New Product");
        New_Product_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        New_Product_Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Product_Name_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Product_Name_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Product_Name_Label.setText("Product Name");

        Price_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Price_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Price_Label.setText("Price");

        GST_Rate_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        GST_Rate_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        GST_Rate_Label.setText("GST Rate");

        Available_Quantity_Label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Available_Quantity_Label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        Available_Quantity_Label.setText("Available Quantity");

        javax.swing.GroupLayout New_Product_PanelLayout = new javax.swing.GroupLayout(New_Product_Panel);
        New_Product_Panel.setLayout(New_Product_PanelLayout);
        New_Product_PanelLayout.setHorizontalGroup(
            New_Product_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_Product_PanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(New_Product_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Available_Quantity_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GST_Rate_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Price_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(New_Product_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(GST_Rate, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Price_Field, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Product_Name)
                    .addComponent(Available_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );
        New_Product_PanelLayout.setVerticalGroup(
            New_Product_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(New_Product_PanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(New_Product_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Product_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Product_Name_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(New_Product_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Price_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Price_Field, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(New_Product_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GST_Rate_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GST_Rate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(New_Product_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Available_Quantity_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Available_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(149, Short.MAX_VALUE))
        );

        Cancel_Adding.setText("Cancel");
        Cancel_Adding.setToolTipText("");
        Cancel_Adding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_AddingActionPerformed(evt);
            }
        });

        Finish_Adding.setText("Finish");
        Finish_Adding.setToolTipText("");
        Finish_Adding.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Finish_AddingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Inventory_NewLayout = new javax.swing.GroupLayout(Inventory_New);
        Inventory_New.setLayout(Inventory_NewLayout);
        Inventory_NewLayout.setHorizontalGroup(
            Inventory_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Inventory_NewLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(Inventory_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Inventory_NewLayout.createSequentialGroup()
                        .addComponent(Cancel_Adding, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Finish_Adding, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(New_Product_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(New_Product_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        Inventory_NewLayout.setVerticalGroup(
            Inventory_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Inventory_NewLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(New_Product_Heading, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(New_Product_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(Inventory_NewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Cancel_Adding, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Finish_Adding, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(73, 73, 73))
        );

        Container.add(Inventory_New, "invenNew");

        Settings_Container.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Speckle_Logo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Speckle_Logo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/speckle-logo.png"))); // NOI18N
        Speckle_Logo1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Change_Username.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Change_Username.setText("Change Username");

        Current_Username_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Username_Label.setText("Current Username");

        Current_Username.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Username.setEnabled(false);

        New_Username_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        New_Username_Label.setText("New Username");

        New_Username.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Change_Username_Button.setText("Change Username");
        Change_Username_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Username_ButtonActionPerformed(evt);
            }
        });

        Change_Password.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Change_Password.setText("Change Password");

        Current_Password_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Password_Label.setText("Current Password");

        Current_Password.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        New_Password_Label1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        New_Password_Label1.setText("New Password");

        New_Password1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Confirm_Password_Label1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Confirm_Password_Label1.setText("Confirm Password");

        Confirm_Password1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Change_Password_Button.setText("Change Password");
        Change_Password_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Change_Password_ButtonActionPerformed(evt);
            }
        });

        Reset_Button1.setText("Reset Recovery Key");
        Reset_Button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset_Button1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout User_TabLayout = new javax.swing.GroupLayout(User_Tab);
        User_Tab.setLayout(User_TabLayout);
        User_TabLayout.setHorizontalGroup(
            User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_TabLayout.createSequentialGroup()
                .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(User_TabLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(Change_Password))
                    .addGroup(User_TabLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(User_TabLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(New_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Current_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(New_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Current_Username, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Change_Username_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(Change_Username)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, User_TabLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(User_TabLayout.createSequentialGroup()
                                .addComponent(New_Password_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(New_Password1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(User_TabLayout.createSequentialGroup()
                                .addComponent(Confirm_Password_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Confirm_Password1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(Reset_Button1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                        .addComponent(Change_Password_Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(User_TabLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(Current_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Current_Password, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                .addComponent(Speckle_Logo1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        User_TabLayout.setVerticalGroup(
            User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(User_TabLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Speckle_Logo1, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(User_TabLayout.createSequentialGroup()
                        .addComponent(Change_Username)
                        .addGap(26, 26, 26)
                        .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Current_Username_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Current_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(New_Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(New_Username_Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Change_Username_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(Change_Password)
                        .addGap(26, 26, 26)
                        .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Current_Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Current_Password_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(New_Password1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(New_Password_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(User_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Confirm_Password1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Confirm_Password_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Change_Password_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Reset_Button1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        Settings_Container.addTab("User Details", User_Tab);

        Update_Business_Details.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Update_Business_Details.setText("Update Business Details");

        Current_Value_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Value_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Current_Value_Label.setText("Current");
        Current_Value_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        New_Value_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        New_Value_Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        New_Value_Label.setText("New");
        New_Value_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Business_Name_Label1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Business_Name_Label1.setText("Business Name");

        Current_Business_Name.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Business_Name.setEnabled(false);

        New_Business_Name.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Contact_Number_Label1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Contact_Number_Label1.setText("Contact Number");

        Current_Contact_Number.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Contact_Number.setEnabled(false);

        New_Contact_Number.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        New_Contact_Number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                New_Contact_NumberKeyPressed(evt);
            }
        });

        Email_Address_Label1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Email_Address_Label1.setText("Email Address");

        Current_Email_Address.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Email_Address.setEnabled(false);

        New_Email_Address.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Business_Location_Label1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Business_Location_Label1.setText("<html><p>Business Location (Address) :</p></html>");

        Current_Business_Location_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Business_Location_Label.setText("Current");

        Current_Business_Location.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Current_Business_Location.setEnabled(false);

        New_Business_Location_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        New_Business_Location_Label.setText("New");

        New_Business_Location.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        Save_Changes_Button.setText("Save Changes");
        Save_Changes_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save_Changes_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Details_TabLayout = new javax.swing.GroupLayout(Details_Tab);
        Details_Tab.setLayout(Details_TabLayout);
        Details_TabLayout.setHorizontalGroup(
            Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Details_TabLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(Update_Business_Details)
                .addGap(531, 704, Short.MAX_VALUE))
            .addGroup(Details_TabLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Business_Location_Label1)
                    .addGroup(Details_TabLayout.createSequentialGroup()
                        .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Email_Address_Label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Contact_Number_Label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                .addComponent(Business_Name_Label1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(Current_Business_Location_Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(New_Business_Location_Label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(Details_TabLayout.createSequentialGroup()
                                .addComponent(Current_Value_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(New_Value_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(Current_Business_Location, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Details_TabLayout.createSequentialGroup()
                                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Current_Contact_Number, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Current_Business_Name, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Current_Email_Address, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(New_Business_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(New_Contact_Number, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(New_Email_Address, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(New_Business_Location, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Details_TabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Save_Changes_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Details_TabLayout.setVerticalGroup(
            Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Details_TabLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(Update_Business_Details)
                .addGap(26, 26, 26)
                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Value_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Current_Value_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Business_Name_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Current_Business_Name)
                    .addComponent(New_Business_Name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Contact_Number_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Current_Contact_Number)
                    .addComponent(New_Contact_Number))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Email_Address_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Current_Email_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Email_Address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(Business_Location_Label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Current_Business_Location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Current_Business_Location_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Details_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(New_Business_Location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New_Business_Location_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addComponent(Save_Changes_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        Settings_Container.addTab("Business Details", Details_Tab);

        javax.swing.GroupLayout Settings_PageLayout = new javax.swing.GroupLayout(Settings_Page);
        Settings_Page.setLayout(Settings_PageLayout);
        Settings_PageLayout.setHorizontalGroup(
            Settings_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Settings_PageLayout.createSequentialGroup()
                .addComponent(Settings_Container)
                .addContainerGap())
        );
        Settings_PageLayout.setVerticalGroup(
            Settings_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Settings_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
        );

        Container.add(Settings_Page, "settings");

        Speckle_Logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/app-logo.png"))); // NOI18N

        About_Heading.setFont(new java.awt.Font("Segoe UI Semibold", 0, 30)); // NOI18N
        About_Heading.setText("About Speckle");
        About_Heading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Version_Label.setFont(new java.awt.Font("Segoe UI Semibold", 0, 15)); // NOI18N
        Version_Label.setText("Version " + Version);
        Version_Label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        About_Para.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        About_Para.setText("Speckle is Software Used For Invoicing(Billing) and Inventory Management");

        Authors_Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(180, 180, 180)));

        Authors_Container.setBorder(null);

        Authors_Text.setEditable(false);
        Authors_Text.setBackground(new java.awt.Color(255, 255, 255));
        Authors_Text.setColumns(20);
        Authors_Text.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        Authors_Text.setRows(5);
        Authors_Text.setText("\n  Astralsphere Arts team would like to acknowledge the following contributors:\n\n  Akshat Singh Pawar (akshat1222)\n  Hemant Kumar Morya (XaHertz)\n");
        Authors_Container.setViewportView(Authors_Text);

        javax.swing.GroupLayout Authors_TabLayout = new javax.swing.GroupLayout(Authors_Tab);
        Authors_Tab.setLayout(Authors_TabLayout);
        Authors_TabLayout.setHorizontalGroup(
            Authors_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Authors_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        Authors_TabLayout.setVerticalGroup(
            Authors_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Authors_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        About_Container.addTab("Authors", Authors_Tab);

        License_Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(180, 180, 180)));

        License_Container.setBorder(null);

        License_Text.setEditable(false);
        License_Text.setBackground(new java.awt.Color(255, 255, 255));
        License_Text.setColumns(20);
        License_Text.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        License_Text.setRows(5);
        License_Text.setText("\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (c) 2021-2025 Astralsphere Arts\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n");
        License_Text.setCaretPosition(0);
        License_Container.setViewportView(License_Text);

        javax.swing.GroupLayout License_TabLayout = new javax.swing.GroupLayout(License_Tab);
        License_Tab.setLayout(License_TabLayout);
        License_TabLayout.setHorizontalGroup(
            License_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(License_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        License_TabLayout.setVerticalGroup(
            License_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(License_Container, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        About_Container.addTab("License", License_Tab);

        Credits_Tab.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(180, 180, 180)));

        Credits_Container.setBorder(null);

        Credits_Text.setEditable(false);
        Credits_Text.setBackground(new java.awt.Color(255, 255, 255));
        Credits_Text.setColumns(20);
        Credits_Text.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        Credits_Text.setRows(5);
        Credits_Text.setText("\n  Some features of Astral Invoice rely on external libraries here is a list of them:\n\n  1. SQLite JDBC Crypt - https://github.com/Willena/sqlite-jdbc-crypt\n  2. FlatLaf - https://www.formdev.com/flatlaf\n  3. OpenPDF - https://github.com/LibrePDF/OpenPDF\n  4. ICU4J (International Components for Unicode) - https://icu.unicode.org\n");
        Credits_Container.setViewportView(Credits_Text);

        javax.swing.GroupLayout Credits_TabLayout = new javax.swing.GroupLayout(Credits_Tab);
        Credits_Tab.setLayout(Credits_TabLayout);
        Credits_TabLayout.setHorizontalGroup(
            Credits_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Credits_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE)
        );
        Credits_TabLayout.setVerticalGroup(
            Credits_TabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Credits_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
        );

        About_Container.addTab("Credits", Credits_Tab);

        About_Container.setSelectedComponent(License_Tab);

        javax.swing.GroupLayout About_PageLayout = new javax.swing.GroupLayout(About_Page);
        About_Page.setLayout(About_PageLayout);
        About_PageLayout.setHorizontalGroup(
            About_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(About_PageLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(About_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(About_PageLayout.createSequentialGroup()
                        .addComponent(Speckle_Logo)
                        .addGap(18, 18, 18)
                        .addGroup(About_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(About_Heading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Version_Label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(About_Para, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(About_Container))
                .addGap(56, 56, 56))
        );
        About_PageLayout.setVerticalGroup(
            About_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(About_PageLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(About_PageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(About_PageLayout.createSequentialGroup()
                        .addComponent(About_Heading)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Version_Label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(About_Para, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Speckle_Logo))
                .addGap(27, 27, 27)
                .addComponent(About_Container, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );

        Container.add(About_Page, "about");

        File_Menu.setText("File");

        SignOut_MenuItem.setText("Sign Out");
        SignOut_MenuItem.setEnabled(false);
        SignOut_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignOut_MenuItemActionPerformed(evt);
            }
        });
        File_Menu.add(SignOut_MenuItem);
        File_Menu.add(Separator_01);

        Exit_MenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Exit_MenuItem.setText("Exit");
        Exit_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Exit_MenuItemActionPerformed(evt);
            }
        });
        File_Menu.add(Exit_MenuItem);

        MenuBar.add(File_Menu);

        Edit_Menu.setText("Edit");
        MenuBar.add(Edit_Menu);

        Help_Menu.setText("Help");

        About_MenuItem.setText("About");
        About_MenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                About_MenuItemActionPerformed(evt);
            }
        });
        Help_Menu.add(About_MenuItem);

        MenuBar.add(Help_Menu);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(SideBar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(SideBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Container, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void SignIn_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignIn_ButtonActionPerformed
        usrname = Username.getText();
        passwd = new String(Password.getPassword());
        if (usrname.equals("") && passwd.equals(""))
            JOptionPane.showMessageDialog(null, "Please enter Username and Password they cannot be Blank."
                + " Please Try Again!", "Credentials are Blank", JOptionPane.ERROR_MESSAGE);
        else if (com.astral.internal.SQLite.logIn(usrname, passwd)) {
            SignIn_ActionPerformed();
        } else
            JOptionPane.showMessageDialog(null, "The Username or Password entered are Incorrect."
                + " Please Try Again!", "Incorrect Credentials", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_SignIn_ButtonActionPerformed

    private void Forgot_Password_LabelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Forgot_Password_LabelMouseMoved
        Forgot_Password_Label.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_Forgot_Password_LabelMouseMoved

    private void Forgot_Password_LabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Forgot_Password_LabelMousePressed
        Recovery_Key.setText("");
        New_Password.setText("");
        Confirm_Passwd.setText("");
        Container_Deck.show(Container, "forgotPassword");
    }//GEN-LAST:event_Forgot_Password_LabelMousePressed

    private void Next_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Next_ButtonActionPerformed
        usrname = com.astral.internal.Security.getEncodedString(SignUp_Username.getText());
        passwd = new String(Create_Password.getPassword());
        String confpasswd = new String(Confirm_Password.getPassword());
        key = com.astral.internal.Function.randomAlphaNumeric(16);
        if (usrname.equals("") || passwd.equals(""))
            JOptionPane.showMessageDialog(null, "Username or Password cannot be Empty."
                + " Please Try Again!", "Username/Password Empty", JOptionPane.ERROR_MESSAGE);
        else if (passwd.length() < 8)
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least 8 Characters."
                + " Please Try Again!", "Password Too Short", JOptionPane.ERROR_MESSAGE);
        else if (!com.astral.internal.Security.checkPass(passwd))
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least One Numeric,"
                + " One Uppercase and One Lowercase Character. Please Try Again!", "Insecure"
                + " Password", JOptionPane.ERROR_MESSAGE);
        else if (!passwd.equals(confpasswd))
            JOptionPane.showMessageDialog(null, "The Passwords in Password Fields do not Match."
                + " Please Try Again!", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
        else {
            com.astral.internal.SQLite.userConfig(usrname, com.astral.internal.Security.generateHash(passwd));
            com.astral.internal.SQLite.setConfigValue("Recovery Key", com.astral.internal.Security.generateHash(key));
            Container_Deck.show(Container, "signUpDetails");
        }
    }//GEN-LAST:event_Next_ButtonActionPerformed

    private void Contact_NumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Contact_NumberKeyPressed
        String Number = Contact_Number.getText();
        int length = Number.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 10)
                Contact_Number.setEditable(true);
            else
                Contact_Number.setEditable(false);
        } else {
            switch (evt.getExtendedKeyCode()) {
                case java.awt.event.KeyEvent.VK_BACK_SPACE -> Contact_Number.setEditable(true);
                case java.awt.event.KeyEvent.VK_DELETE -> Contact_Number.setEditable(true);
                default -> Contact_Number.setEditable(false);
            }
        }
    }//GEN-LAST:event_Contact_NumberKeyPressed

    private void Back_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_ButtonActionPerformed
        Container_Deck.show(Container, "signUpUser");
    }//GEN-LAST:event_Back_ButtonActionPerformed

    private void SignUp_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUp_ButtonActionPerformed
        String cname = Business_Name.getText();
        String cnum = Contact_Number.getText();
        String cmail = Email_Address.getText();
        String caddress = Business_Location.getText();
        if (cname.equals("") || cnum.equals("") || cmail.equals("") || caddress.equals(""))
            JOptionPane.showMessageDialog(null, "All Fields are Required to be Filled."
                + " Please Try Again!", "Empty Feilds", JOptionPane.ERROR_MESSAGE);
        else if (cnum.length() != 10)
            JOptionPane.showMessageDialog(null, "Contact Number Must be 10 Digit Long. Please"
                + " Try Again!", "Contact Number Too Short", JOptionPane.ERROR_MESSAGE);
        else {
            com.astral.internal.SQLite.compConfig(cname, cnum, cmail, caddress);
            Verify_Username.setText(com.astral.internal.Security.getDecodedString(usrname));
            Verify_Business_Name.setText(cname);
            Verfiy_Contact_Number.setText(cnum);
            Verify_Email_Address.setText(cmail);
            Verify_Business_Location.setText(caddress);
            Recovery_Key_Display_Label.setText(key);
            Container_Deck.show(Container, "verifyDetails");
        }
    }//GEN-LAST:event_SignUp_ButtonActionPerformed

    private void Finish_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Finish_ButtonActionPerformed
        SignIn_ActionPerformed();
    }//GEN-LAST:event_Finish_ButtonActionPerformed

    private void Cancel_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_ButtonActionPerformed
        Container_Deck.show(Container, "signIn");
    }//GEN-LAST:event_Cancel_ButtonActionPerformed

    private void Reset_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset_ButtonActionPerformed
        String RecoveryKey = Recovery_Key.getText();
        String Newpswd = new String(New_Password.getPassword());
        String Confpswd = new String(Confirm_Passwd.getPassword());
        key = com.astral.internal.Function.randomAlphaNumeric(16);
        if (RecoveryKey.equals("") || Newpswd.equals(""))
            JOptionPane.showMessageDialog(null, "Recovery Key or Password cannot be Empty. Please"
                + " Try Again!", "Recovery Key/Password Empty", JOptionPane.ERROR_MESSAGE);
        else if (!com.astral.internal.Security.validateHash(RecoveryKey, com.astral.internal.SQLite.getConfigValue("Recovery Key")))
            JOptionPane.showMessageDialog(null, "The Recovery Key You Have Entered is Incorrect."
                + " Please Try Again!", "Incorrect Recovery Key", JOptionPane.ERROR_MESSAGE);
        else if (Newpswd.length() < 8)
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least 8 Characters."
                + " Please Try Again!", "Password Too Short", JOptionPane.ERROR_MESSAGE);
        else if (!com.astral.internal.Security.checkPass(Newpswd))
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least One Numeric,"
                + " One Uppercase and One Lowercase Character. Please Try Again!", "Insecure"
                + " Password", JOptionPane.ERROR_MESSAGE);
        else if (!Newpswd.equals(Confpswd))
            JOptionPane.showMessageDialog(null, "New Password and Confirm Password Doesn't Match."
                + " Please Try Again!", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
        else if (com.astral.internal.Security.validateHash(Newpswd, com.astral.internal.SQLite.getConfigValue("Password")))
            JOptionPane.showMessageDialog(null, "The Password Enterd has been used Already. Try Again with" 
                + " a Password You haven’t used Before!", "Old Password Used", JOptionPane.ERROR_MESSAGE);
        else {
            com.astral.internal.SQLite.setConfigValue("Password", com.astral.internal.Security.generateHash(Newpswd));
            com.astral.internal.SQLite.setConfigValue("Recovery Key", com.astral.internal.Security.generateHash(key));
            JOptionPane.showMessageDialog(null, "Password Has Been Changed Successfully!",
                "Success", JOptionPane.INFORMATION_MESSAGE);
            JOptionPane.showMessageDialog(null, "Your New Recovery Key is " + key,
                "Recovery Key", JOptionPane.INFORMATION_MESSAGE);
            Username.setText("");
            Password.setText("");
            Container_Deck.show(Container, "signIn");
            Recovery_Key.setText("");
            New_Password.setText("");
            Confirm_Passwd.setText("");
        }
    }//GEN-LAST:event_Reset_ButtonActionPerformed

    private void About_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_About_MenuItemActionPerformed
        About_ActionPerformed();
    }//GEN-LAST:event_About_MenuItemActionPerformed

    private void Exit_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Exit_MenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_Exit_MenuItemActionPerformed

    private void Home_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Home_ButtonActionPerformed
        Home_ActionPerformed();
    }//GEN-LAST:event_Home_ButtonActionPerformed

    private void Invoicing_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Invoicing_ButtonActionPerformed
        Invoicing_ActionPerformed();
    }//GEN-LAST:event_Invoicing_ButtonActionPerformed

    private void Inventory_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Inventory_ButtonActionPerformed
        Inventory_ActionPerformed();
    }//GEN-LAST:event_Inventory_ButtonActionPerformed

    private void Settings_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Settings_ButtonActionPerformed
        Settings_ActionPerformed();
    }//GEN-LAST:event_Settings_ButtonActionPerformed

    private void About_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_About_ButtonActionPerformed
        About_ActionPerformed();
    }//GEN-LAST:event_About_ButtonActionPerformed

    private void SignOut_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignOut_ButtonActionPerformed
        SignOut_ActionPerformed();
    }//GEN-LAST:event_SignOut_ButtonActionPerformed

    private void Change_Username_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Username_ButtonActionPerformed
        String username = com.astral.internal.Security.getEncodedString(New_Username.getText());
        if (username.equals(""))
            JOptionPane.showMessageDialog(null, "Username cannot be Empty. Please Try Again!", "Username Field Empty", JOptionPane.ERROR_MESSAGE);
        else {
            com.astral.internal.SQLite.setConfigValue("Username", username);
            JOptionPane.showMessageDialog(null, "Your Username has been changed Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            Current_Username.setText(com.astral.internal.Security.getDecodedString(com.astral.internal.SQLite.getConfigValue("Username")));
            New_Username.setText("");
        }
    }//GEN-LAST:event_Change_Username_ButtonActionPerformed

    private void Change_Password_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Change_Password_ButtonActionPerformed
        String curpasswd = new String(Current_Password.getPassword());
        String newpasswd = new String(New_Password1.getPassword());
        String confpasswd = new String(Confirm_Password1.getPassword());
        if (curpasswd.equals("") || newpasswd.equals(""))
            JOptionPane.showMessageDialog(null, "Both Current and New Passwords are needed for changing Password. Please Try Again!", "Password Fields Empty", JOptionPane.ERROR_MESSAGE);
        else if (!com.astral.internal.Security.validateHash(curpasswd, com.astral.internal.SQLite.getConfigValue("Password")))
            JOptionPane.showMessageDialog(null, "The Current Password is Incorrect. Please Try Again!", "Incorrect Password", JOptionPane.ERROR_MESSAGE);
        else if (newpasswd.length() < 8)
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least 8 Characters. Please Try Again!", "Password Too Short", JOptionPane.ERROR_MESSAGE);
        else if (!com.astral.internal.Security.checkPass(newpasswd))
            JOptionPane.showMessageDialog(null, "Your Password Must Contain at Least One Numeric, One Uppercase and One Lowercase Character. Please Try Again!", "Insecure Password", JOptionPane.ERROR_MESSAGE);
        else if (!newpasswd.equals(confpasswd))
            JOptionPane.showMessageDialog(null, "The Password in Confirm Password Field does not Match. Please Try Again!", "Password Mismatch", JOptionPane.ERROR_MESSAGE);
        else if (com.astral.internal.Security.validateHash(newpasswd, com.astral.internal.SQLite.getConfigValue("Password")))
            JOptionPane.showMessageDialog(null, "The Password Enterd has been used Already. Try Again with a Password You haven’t used Before!", "Old Password Used", JOptionPane.ERROR_MESSAGE);
        else {
            com.astral.internal.SQLite.setConfigValue("Password", com.astral.internal.Security.generateHash(newpasswd));
            JOptionPane.showMessageDialog(null, "Your Password has been changed Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            Current_Password.setText("");
            New_Password1.setText("");
            Confirm_Password1.setText("");
        }
    }//GEN-LAST:event_Change_Password_ButtonActionPerformed

    private void Reset_Button1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset_Button1ActionPerformed
        RecoveryKey sc = new RecoveryKey();
        sc.setVisible(true);
    }//GEN-LAST:event_Reset_Button1ActionPerformed

    private void New_Contact_NumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_New_Contact_NumberKeyPressed
        String Number = New_Contact_Number.getText();
        int length = Number.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 10)
                New_Contact_Number.setEditable(true);
            else
                New_Contact_Number.setEditable(false);
        } else {
            switch (evt.getExtendedKeyCode()) {
                case java.awt.event.KeyEvent.VK_BACK_SPACE -> New_Contact_Number.setEditable(true);
                case java.awt.event.KeyEvent.VK_DELETE -> New_Contact_Number.setEditable(true);
                default -> New_Contact_Number.setEditable(false);
            }
        }
    }//GEN-LAST:event_New_Contact_NumberKeyPressed

    private void Save_Changes_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save_Changes_ButtonActionPerformed
        String cname = New_Business_Name.getText();
        String cnum = New_Contact_Number.getText();
        String cmail = New_Email_Address.getText();
        String caddress = New_Business_Location.getText();
        if (cname.equals("") && cnum.equals("") && cmail.equals("") && caddress.equals(""))
            JOptionPane.showMessageDialog(null, "You haven't made any Changes. Please Try Again!", "No Changes Found", JOptionPane.ERROR_MESSAGE);
        else {
            if (cname.equals(""))
                cname = Current_Business_Name.getText();
            if (cmail.equals(""))
                cmail = Current_Email_Address.getText();
            if (caddress.equals(""))
                caddress = Current_Business_Location.getText();
            if (cnum.equals("")) {
                cnum = Current_Contact_Number.getText();
                com.astral.internal.SQLite.compConfig(cname, cnum, cmail, caddress);
                JOptionPane.showMessageDialog(null, "Your Changes Have Been Saved Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            else if (cnum.length() != 10)
                JOptionPane.showMessageDialog(null, "Contact Number Must be 10 Digit Long. Please Try Again!", "Contact Number Too Short", JOptionPane.ERROR_MESSAGE);
            else {
                com.astral.internal.SQLite.compConfig(cname, cnum, cmail, caddress);
                JOptionPane.showMessageDialog(null, "Your Changes Have Been Saved Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            }
            Settings_ActionPerformed();
            New_Business_Name.setText("");
            New_Contact_Number.setText("");
            New_Email_Address.setText("");
            New_Business_Location.setText("");
        }
    }//GEN-LAST:event_Save_Changes_ButtonActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        PID = null;
        New_Product_Heading.setText("Add New Product");
        Product_Name.setText("");
        Price_Field.setText("");
        GST_Rate.setText("");
        Available_Quantity.setText("");
        Container_Deck.show(Container, "invenNew");
    }//GEN-LAST:event_AddActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        int[] rows = Inventory_Table.getSelectedRows();
        for (int i=0; i<rows.length; i++) {
            String ProdID = Inventory_Table.getValueAt(rows[i]-i, 0).toString();
            com.astral.internal.SQLite.remRowInven(ProdID);
            Inventory_Model.removeRow(rows[i]-i);
        }
    }//GEN-LAST:event_RemoveActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
        int row = Inventory_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select a Product to Update it's Stock.", "No Product Selected", JOptionPane.ERROR_MESSAGE);
        else {
            PID = Inventory_Table.getValueAt(row, 0).toString();
            int quantity = 0;
            if (Inventory_Table.getValueAt(row, 4) != null)
                quantity = (Integer) Inventory_Table.getValueAt(row, 4);
            String update = JOptionPane.showInputDialog(null, "Enter the Amount of Stock You want to Increase", "Update Stock", JOptionPane.PLAIN_MESSAGE);
            if (update == null || update.equals(""))
                update = "0";
            String quan = Integer.toString(quantity + Integer.parseInt(update));
            com.astral.internal.SQLite.updateStock(PID, quan);
            Inventory_ActionPerformed();
        }
    }//GEN-LAST:event_UpdateActionPerformed

    private void ImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Import from CSV");
        fileChooser.setFileFilter(new FileNameExtensionFilter("CSV File", "csv"));
        if (fileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            com.astral.internal.Function.invenCSVim(fileChooser.getSelectedFile());
            JOptionPane.showMessageDialog(null, "Inventory Data Imported Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
            Inventory_ActionPerformed();
        }
    }//GEN-LAST:event_ImportActionPerformed

    private void Export_InventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_InventoryActionPerformed
        Export_ActionPerformed("Inventory");
    }//GEN-LAST:event_Export_InventoryActionPerformed

    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
        int row = Invoice_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select an Invoice from the Inovice List.", "No Invoice Selected", JOptionPane.ERROR_MESSAGE);
        else {
            String invID = Invoice_Table.getValueAt(row, 0).toString();
            com.astral.internal.Function.invoicePDF(invID);
            try {
                Desktop.getDesktop().open(com.astral.internal.Function.invPath);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_ViewActionPerformed

    private void Remove1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remove1ActionPerformed
        DefaultTableModel Invoice_Model = (DefaultTableModel) Invoice_Table.getModel();
        int[] rows = Invoice_Table.getSelectedRows();
        for (int i=0; i<rows.length; i++) {
            String invID = Invoice_Table.getValueAt(rows[i]-i, 0).toString();
            com.astral.internal.SQLite.remInvoice(invID);
            Invoice_Model.removeRow(rows[i]-i);
        }
    }//GEN-LAST:event_Remove1ActionPerformed

    private void Export_InvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Export_InvoiceActionPerformed
        Export_ActionPerformed("Invoice");
    }//GEN-LAST:event_Export_InvoiceActionPerformed

    private void New_InvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_New_InvoiceActionPerformed
        New_Invoice_Table.setModel(com.astral.internal.Function.newInvoTableModel());
        final TableColumnModel NewColumnModel = New_Invoice_Table.getColumnModel();
        for (int column = 0; column < New_Invoice_Table.getColumnCount(); column++) {
            int width = 15;
            for (int row = 0; row < New_Invoice_Table.getRowCount(); row++) {
                TableCellRenderer renderer = New_Invoice_Table.getCellRenderer(row, column);
                Component comp = New_Invoice_Table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1 , width);
            }
            if (width > 300) width=300;
            NewColumnModel.getColumn(column).setPreferredWidth(width);
        }
        New_Invoice_Table.getColumnModel().getColumn(1).setMinWidth(0);
        New_Invoice_Table.getColumnModel().getColumn(1).setMaxWidth(0);
        New_Invoice_Table.getColumnModel().getColumn(1).setWidth(0);
        New_Invoice_Table.getColumnModel().getColumn(4).setMinWidth(0);
        New_Invoice_Table.getColumnModel().getColumn(4).setMaxWidth(0);
        New_Invoice_Table.getColumnModel().getColumn(4).setWidth(0);
        Customer_Name.setText("");
        Customer_Contact.setText("");
        Customer_Address.setText("");
        Container_Deck.show(Container, "invNew");
    }//GEN-LAST:event_New_InvoiceActionPerformed

    private void Customer_ContactKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Customer_ContactKeyPressed
        String Number = Customer_Contact.getText();
        int length = Number.length();
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
            if (length < 10)
                Customer_Contact.setEditable(true);
            else
                Customer_Contact.setEditable(false);
        } else {
            switch (evt.getExtendedKeyCode()) {
                case java.awt.event.KeyEvent.VK_BACK_SPACE -> Customer_Contact.setEditable(true);
                case java.awt.event.KeyEvent.VK_DELETE -> Customer_Contact.setEditable(true);
                default -> Customer_Contact.setEditable(false);
            }
        }
    }//GEN-LAST:event_Customer_ContactKeyPressed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        Container_Deck.show(Container, "invMain");
    }//GEN-LAST:event_CancelActionPerformed

    private void Create_InvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Create_InvoiceActionPerformed
        int prodSelected = 0;
        boolean emptyQuan = false;
        boolean excessQuan = false;
        String invID = "INV-" + new java.text.SimpleDateFormat("yyMMdd-HHmmss").format(new java.util.Date()) + "-" + com.astral.internal.Function.randomID(4);
        String custName = Customer_Name.getText();
        String custContact = Customer_Contact.getText();
        String custAddress = Customer_Address.getText();
        String saleDate = new java.text.SimpleDateFormat("dd MMMM yyyy").format(new java.util.Date());
        String saleGST = "0";
        String saleAmount = "0";
        for (int row = 0; row < New_Invoice_Table.getRowCount(); row++) {
            if (Boolean.parseBoolean(New_Invoice_Table.getValueAt(row, 0).toString())) {
                prodSelected++;
                String availQuan = Integer.toString((Integer) New_Invoice_Table.getValueAt(row, 5));
                String purchQuan = "0";
                if (New_Invoice_Table.getValueAt(row, 6) != null)
                    purchQuan = Integer.toString((Integer) New_Invoice_Table.getValueAt(row, 6));
                if (purchQuan.equals("0")) {
                    emptyQuan = true;
                }
                int remaingQuan = Integer.parseInt(availQuan) - Integer.parseInt(purchQuan);
                if (remaingQuan < 0)
                    excessQuan = true;
            }
        }
        if (custName.equals("") || custContact.equals("") || custAddress.equals(""))
            JOptionPane.showMessageDialog(null, "Customer Details can't be Empty. Please Try Again!", "Customer Details Empty", JOptionPane.ERROR_MESSAGE);
        else if (prodSelected == 0)
            JOptionPane.showMessageDialog(null, "At least one Product needs to be Selected. Please Try Again!", "No Products Selected", JOptionPane.ERROR_MESSAGE);
        else if (emptyQuan)
            JOptionPane.showMessageDialog(null, "Purchased Quantity for one or more Products is Empty. Please Try Again!", "Purchased Quantity Empty", JOptionPane.ERROR_MESSAGE);
        else if (excessQuan)
            JOptionPane.showMessageDialog(null, "Purchased Quantity exceeds the Available Quantity for one or more Products. Please Try Again!", "Purchased Quantity Exceeded", JOptionPane.ERROR_MESSAGE);
        else {
            com.astral.internal.SQLite.newInvoiceTable(invID);
            for (int row = 0; row < New_Invoice_Table.getRowCount(); row++) {
                if (Boolean.parseBoolean(New_Invoice_Table.getValueAt(row, 0).toString())) {
                    String prodID = (String) New_Invoice_Table.getValueAt(row, 1);
                    String prodName = (String) New_Invoice_Table.getValueAt(row, 2);
                    String Price = Double.toString((Double) New_Invoice_Table.getValueAt(row, 3));
                    String gstRate = Integer.toString((Integer) New_Invoice_Table.getValueAt(row, 4));
                    int availQuan = (Integer) New_Invoice_Table.getValueAt(row, 5);
                    String purchQuan = Integer.toString((Integer) New_Invoice_Table.getValueAt(row, 6));
                    String remaingQuan = Integer.toString(availQuan - Integer.parseInt(purchQuan));
                    double Amount = Double.parseDouble(Price) * Double.parseDouble(purchQuan);
                    String gstAmount = Double.toString((Amount * Double.parseDouble(gstRate)) / 100);
                    saleGST = Double.toString(Double.parseDouble(saleGST) + Double.parseDouble(gstAmount));
                    String netAmount = Double.toString(Amount + Double.parseDouble(gstAmount));
                    saleAmount = Double.toString(Double.parseDouble(saleAmount) + Double.parseDouble(netAmount));
                    com.astral.internal.SQLite.updateStock(prodID, remaingQuan);
                    com.astral.internal.SQLite.newInvoiceTable(invID, prodName, Price, purchQuan, gstRate, gstAmount, netAmount);
                }
            }
            com.astral.internal.SQLite.newInvoice(invID, custName, custContact, custAddress, saleDate, saleGST, saleAmount);
            com.astral.internal.Function.invoicePDF(invID);
            Invoicing_ActionPerformed();
            try {
                Desktop.getDesktop().open(com.astral.internal.Function.invPath);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, ex, "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_Create_InvoiceActionPerformed

    private void SignOut_MenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignOut_MenuItemActionPerformed
        SignOut_ActionPerformed();
    }//GEN-LAST:event_SignOut_MenuItemActionPerformed

    private void Finish_AddingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Finish_AddingActionPerformed
        if (PID == null)
            PID = "SPK-" + com.astral.internal.Function.randomID(4) + "-" + com.astral.internal.Function.randomID(4);
        String name = Product_Name.getText();
        String price = Price_Field.getText();
        String gst = GST_Rate.getText();
        String quan = Available_Quantity.getText();
        if (name.equals("") || price.equals("") || gst.equals("") || quan.equals (""))
            JOptionPane.showMessageDialog(null, "Product Details can't be Empty. Please Try Again!", "Product Details Empty", JOptionPane.ERROR_MESSAGE);
        else {
            com.astral.internal.SQLite.updateInven(PID, name, price, gst, quan);
            Inventory_ActionPerformed();
        }
    }//GEN-LAST:event_Finish_AddingActionPerformed

    private void Cancel_AddingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_AddingActionPerformed
        Container_Deck.show(Container, "inventory");
    }//GEN-LAST:event_Cancel_AddingActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        int row = Inventory_Table.getSelectedRow();
        if (row == -1)
            JOptionPane.showMessageDialog(null, "Please Select a Product to Edit it's Details.", "No Product Selected", JOptionPane.ERROR_MESSAGE);
        else {
            PID = Inventory_Table.getValueAt(row, 0).toString();
            New_Product_Heading.setText("Edit Product Details");
            Product_Name.setText(Inventory_Table.getValueAt(row, 1).toString());
            Price_Field.setText(Inventory_Table.getValueAt(row, 2).toString());
            GST_Rate.setText(Inventory_Table.getValueAt(row, 3).toString());
            Available_Quantity.setText(Inventory_Table.getValueAt(row, 4).toString());
            Container_Deck.show(Container, "invenNew");
        }
    }//GEN-LAST:event_EditActionPerformed

    private void SignIn_ActionPerformed() {
        LoggedIn = true;
        Home_ActionPerformed();
        SignOut_MenuItem.setEnabled(true);
        Invoicing_Button.setEnabled(true);
        Inventory_Button.setEnabled(true);
        Settings_Button.setEnabled(true);
        SignOut_Button.setEnabled(true);
    }

    private void SignOut_ActionPerformed() {
        LoggedIn = false;
        Username.setText("");
        Password.setText("");
        Container_Deck.show(Container, "signIn");
        SignOut_MenuItem.setEnabled(false);
        Invoicing_Button.setEnabled(false);
        Inventory_Button.setEnabled(false);
        Settings_Button.setEnabled(false);
        SignOut_Button.setEnabled(false);
    }

    private void Home_ActionPerformed() {
        if (LoggedIn) {
            Help_Para.setText("<html>Welcome <b>" + com.astral.internal.Security.getDecodedString(com.astral.internal.SQLite.getConfigValue("Username")) + "</b>! This is a Quick Overview of Speckle :</html>");
            String data[][] = com.astral.internal.SQLite.dashData();
            Product_One_Label.setText(data[0][0]);
            Product_One_Quantity.setText(data[0][1]);
            Product_Two_Label.setText(data[1][0]);
            Product_Two_Quantity.setText(data[1][1]);
            Product_Three_Label.setText(data[2][0]);
            Product_Three_Quantity.setText(data[2][1]);
            Product_Four_Label.setText(data[3][0]);
            Product_Four_Quantity.setText(data[3][1]);
            Product_Five_Label.setText(data[4][0]);
            Product_Five_Quantity.setText(data[4][1]);
            Container_Deck.show(Container, "home");
        } else {
            Container_Deck.show(Container, "signIn");
        }
    }

    private void Invoicing_ActionPerformed() {
        Invoice_Table.setModel(com.astral.internal.Function.invoTableModel());
        final TableColumnModel columnModel = Invoice_Table.getColumnModel();
        for (int column = 0; column < Invoice_Table.getColumnCount(); column++) {
            int width = 15;
            for (int row = 0; row < Invoice_Table.getRowCount(); row++) {
                TableCellRenderer renderer = Invoice_Table.getCellRenderer(row, column);
                Component comp = Invoice_Table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1 , width);
            }
            if (width > 300) width=300;
            columnModel.getColumn(column).setPreferredWidth(width);
        }
        Container_Deck.show(Container, "invMain");
    }

    private void Inventory_ActionPerformed() {
        Inventory_Table.setModel(com.astral.internal.Function.invenTableModel());
        final TableColumnModel columnModel = Inventory_Table.getColumnModel();
        for (int column = 0; column < Inventory_Table.getColumnCount(); column++) {
            int width = 15;
            for (int row = 0; row < Inventory_Table.getRowCount(); row++) {
                TableCellRenderer renderer = Inventory_Table.getCellRenderer(row, column);
                Component comp = Inventory_Table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1 , width);
            }
            if (width > 300) width=300;
            columnModel.getColumn(column).setPreferredWidth(width);
        }
        Inventory_Model = (DefaultTableModel) Inventory_Table.getModel();
        Container_Deck.show(Container, "inventory");
    }

    private void Settings_ActionPerformed() {
        Current_Username.setText(com.astral.internal.Security.getDecodedString(com.astral.internal.SQLite.getConfigValue("Username")));
        Current_Business_Name.setText(com.astral.internal.SQLite.getConfigValue("Business Name"));
        Current_Contact_Number.setText(com.astral.internal.SQLite.getConfigValue("Contact Number"));
        Current_Email_Address.setText(com.astral.internal.SQLite.getConfigValue("Email Address"));
        Current_Business_Location.setText(com.astral.internal.SQLite.getConfigValue("Business Location"));
        Container_Deck.show(Container, "settings");
    }

    private void About_ActionPerformed() {
        Container_Deck.show(Container, "about");
    }

    private void Export_ActionPerformed(String TableName) {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Export to CSV");
        fileChooser.setDialogType(JFileChooser.SAVE_DIALOG);
        fileChooser.setSelectedFile(new File("Speckle-" + TableName + "-" + new java.text.SimpleDateFormat("dd-MM-yyyy").format(new java.util.Date()) + ".csv"));
        fileChooser.setFileFilter(new FileNameExtensionFilter("CSV File", "csv"));
        if (fileChooser.showSaveDialog(null) == JFileChooser.APPROVE_OPTION) {
            if (TableName.equals("Inventory"))
                com.astral.internal.Function.invenCSVex(fileChooser.getSelectedFile());
            else
                com.astral.internal.Function.invoiceCSVex(fileChooser.getSelectedFile());
            JOptionPane.showMessageDialog(null, TableName + " Data Exported Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the FlatLightLaf look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If FlatLightLaf is not available, stay with the default look and feel. */
        com.formdev.flatlaf.FlatLightLaf.setup();
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("FlatLightLaf".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        javax.swing.UIManager.put("ScrollBar.thumbArc", 999);
        javax.swing.UIManager.put("ScrollBar.thumbInsets", new java.awt.Insets(2, 2, 2, 2));
        javax.swing.UIManager.put("TabbedPane.showTabSeparators", true);
        javax.swing.UIManager.put("TitlePane.unifiedBackground", false);
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Main().setVisible(true);
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton About_Button;
    private javax.swing.JTabbedPane About_Container;
    private javax.swing.JLabel About_Heading;
    private javax.swing.JMenuItem About_MenuItem;
    private javax.swing.JPanel About_Page;
    private javax.swing.JLabel About_Para;
    private javax.swing.JButton Add;
    private javax.swing.JScrollPane Authors_Container;
    private javax.swing.JPanel Authors_Tab;
    private javax.swing.JTextArea Authors_Text;
    private javax.swing.JTextField Available_Quantity;
    private javax.swing.JLabel Available_Quantity_Label;
    private javax.swing.JButton Back_Button;
    private javax.swing.JPanel Banner;
    private javax.swing.JTextField Business_Location;
    private javax.swing.JLabel Business_Location_Label;
    private javax.swing.JLabel Business_Location_Label1;
    private javax.swing.JTextField Business_Name;
    private javax.swing.JLabel Business_Name_Label;
    private javax.swing.JLabel Business_Name_Label1;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton Cancel_Adding;
    private javax.swing.JButton Cancel_Button;
    private javax.swing.JLabel Change_Password;
    private javax.swing.JButton Change_Password_Button;
    private javax.swing.JLabel Change_Username;
    private javax.swing.JButton Change_Username_Button;
    private javax.swing.JPasswordField Confirm_Passwd;
    private javax.swing.JLabel Confirm_Passwd_Label;
    private javax.swing.JPasswordField Confirm_Password;
    private javax.swing.JPasswordField Confirm_Password1;
    private javax.swing.JLabel Confirm_Password_Label;
    private javax.swing.JLabel Confirm_Password_Label1;
    private javax.swing.JTextField Contact_Number;
    private javax.swing.JLabel Contact_Number_Label;
    private javax.swing.JLabel Contact_Number_Label1;
    private javax.swing.JPanel Container;
    private javax.swing.JButton Create_Invoice;
    private javax.swing.JPasswordField Create_Password;
    private javax.swing.JLabel Create_Password_Label;
    private javax.swing.JScrollPane Credits_Container;
    private javax.swing.JPanel Credits_Tab;
    private javax.swing.JTextArea Credits_Text;
    private javax.swing.JTextField Current_Business_Location;
    private javax.swing.JLabel Current_Business_Location_Label;
    private javax.swing.JTextField Current_Business_Name;
    private javax.swing.JTextField Current_Contact_Number;
    private javax.swing.JTextField Current_Email_Address;
    private javax.swing.JPasswordField Current_Password;
    private javax.swing.JLabel Current_Password_Label;
    private javax.swing.JTextField Current_Username;
    private javax.swing.JLabel Current_Username_Label;
    private javax.swing.JLabel Current_Value_Label;
    private javax.swing.JTextField Customer_Address;
    private javax.swing.JLabel Customer_Address_Label;
    private javax.swing.JTextField Customer_Contact;
    private javax.swing.JLabel Customer_Contact_Label;
    private javax.swing.JPanel Customer_Details_Panel;
    private javax.swing.JTextField Customer_Name;
    private javax.swing.JLabel Customer_Name_Label;
    private javax.swing.JPanel Details_Tab;
    private javax.swing.JButton Edit;
    private javax.swing.JMenu Edit_Menu;
    private javax.swing.JTextField Email_Address;
    private javax.swing.JLabel Email_Address_Label;
    private javax.swing.JLabel Email_Address_Label1;
    private javax.swing.JMenuItem Exit_MenuItem;
    private javax.swing.JButton Export_Inventory;
    private javax.swing.JButton Export_Invoice;
    private javax.swing.JMenu File_Menu;
    private javax.swing.Box.Filler Filler_01;
    private javax.swing.Box.Filler Filler_02;
    private javax.swing.Box.Filler Filler_03;
    private javax.swing.Box.Filler Filler_04;
    private javax.swing.Box.Filler Filler_05;
    private javax.swing.Box.Filler Filler_06;
    private javax.swing.Box.Filler Filler_07;
    private javax.swing.JButton Finish_Adding;
    private javax.swing.JButton Finish_Button;
    private javax.swing.JPanel Forgot_Password;
    private javax.swing.JLabel Forgot_Password_Heading;
    private javax.swing.JLabel Forgot_Password_Label;
    private javax.swing.JLabel Forgot_Password_Para;
    private javax.swing.JTextField GST_Rate;
    private javax.swing.JLabel GST_Rate_Label;
    private javax.swing.JLabel Heading;
    private javax.swing.JPanel Help;
    private javax.swing.JLabel Help_Content;
    private javax.swing.JLabel Help_Label;
    private javax.swing.JMenu Help_Menu;
    private javax.swing.JLabel Help_Para;
    private javax.swing.JButton Home_Button;
    private javax.swing.JPanel Home_Page;
    private javax.swing.JButton Import;
    private javax.swing.JButton Inventory_Button;
    private javax.swing.JPanel Inventory_New;
    private javax.swing.JPanel Inventory_Page;
    private javax.swing.JTable Inventory_Table;
    private javax.swing.JScrollPane Inventory_Table_Container;
    private javax.swing.JPanel Invoice_Main;
    private javax.swing.JPanel Invoice_New;
    private javax.swing.JTable Invoice_Table;
    private javax.swing.JScrollPane Invoice_Table_Container;
    private javax.swing.JButton Invoicing_Button;
    private javax.swing.JScrollPane License_Container;
    private javax.swing.JPanel License_Tab;
    private javax.swing.JTextArea License_Text;
    private javax.swing.JPanel Low_Stock;
    private javax.swing.JLabel Low_Stock_Label;
    private javax.swing.JLabel Low_Stock_Para;
    private javax.swing.JLabel Main_Heading;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JTextField New_Business_Location;
    private javax.swing.JLabel New_Business_Location_Label;
    private javax.swing.JTextField New_Business_Name;
    private javax.swing.JTextField New_Contact_Number;
    private javax.swing.JTextField New_Email_Address;
    private javax.swing.JLabel New_Heading;
    private javax.swing.JButton New_Invoice;
    private javax.swing.JTable New_Invoice_Table;
    private javax.swing.JScrollPane New_Invoice_Table_Container;
    private javax.swing.JPasswordField New_Password;
    private javax.swing.JPasswordField New_Password1;
    private javax.swing.JLabel New_Password_Label;
    private javax.swing.JLabel New_Password_Label1;
    private javax.swing.JLabel New_Product_Heading;
    private javax.swing.JPanel New_Product_Panel;
    private javax.swing.JTextField New_Username;
    private javax.swing.JLabel New_Username_Label;
    private javax.swing.JLabel New_Value_Label;
    private javax.swing.JButton Next_Button;
    private javax.swing.JPasswordField Password;
    private javax.swing.JLabel Password_Label;
    private javax.swing.JTextField Price_Field;
    private javax.swing.JLabel Price_Label;
    private javax.swing.JLabel Product_Five_Label;
    private javax.swing.JLabel Product_Five_Quantity;
    private javax.swing.JLabel Product_Four_Label;
    private javax.swing.JLabel Product_Four_Quantity;
    private javax.swing.JTextField Product_Name;
    private javax.swing.JLabel Product_Name_Label;
    private javax.swing.JLabel Product_One_Label;
    private javax.swing.JLabel Product_One_Quantity;
    private javax.swing.JLabel Product_Three_Label;
    private javax.swing.JLabel Product_Three_Quantity;
    private javax.swing.JLabel Product_Two_Label;
    private javax.swing.JLabel Product_Two_Quantity;
    private javax.swing.JTextField Recovery_Key;
    private javax.swing.JLabel Recovery_Key_Display_Label;
    private javax.swing.JLabel Recovery_Key_Heading;
    private javax.swing.JLabel Recovery_Key_Label;
    private javax.swing.JLabel Recovery_Key_Para;
    private javax.swing.JButton Remove;
    private javax.swing.JButton Remove1;
    private javax.swing.JButton Reset_Button;
    private javax.swing.JButton Reset_Button1;
    private javax.swing.JButton Save_Changes_Button;
    private javax.swing.JPopupMenu.Separator Separator_01;
    private javax.swing.JButton Settings_Button;
    private javax.swing.JTabbedPane Settings_Container;
    private javax.swing.JPanel Settings_Page;
    private javax.swing.JToolBar SideBar;
    private javax.swing.JPanel SignIn;
    private javax.swing.JButton SignIn_Button;
    private javax.swing.JLabel SignIn_Heading;
    private javax.swing.JLabel SignIn_Para;
    private javax.swing.JLabel SignIn_SubHeading;
    private javax.swing.JButton SignOut_Button;
    private javax.swing.JMenuItem SignOut_MenuItem;
    private javax.swing.JButton SignUp_Button;
    private javax.swing.JPanel SignUp_Details;
    private javax.swing.JLabel SignUp_Details_Heading;
    private javax.swing.JLabel SignUp_Details_Para;
    private javax.swing.JPanel SignUp_User;
    private javax.swing.JLabel SignUp_User_Heading;
    private javax.swing.JLabel SignUp_User_Para_A;
    private javax.swing.JLabel SignUp_User_Para_B;
    private javax.swing.JLabel SignUp_User_SubHeading;
    private javax.swing.JPanel SignUp_User_SubPanel;
    private javax.swing.JTextField SignUp_Username;
    private javax.swing.JLabel SignUp_Username_Label;
    private javax.swing.JLabel Speckle_Label;
    private javax.swing.JLabel Speckle_Logo;
    private javax.swing.JLabel Speckle_Logo1;
    private javax.swing.JButton Update;
    private javax.swing.JLabel Update_Business_Details;
    private javax.swing.JPanel User_Tab;
    private javax.swing.JTextField Username;
    private javax.swing.JLabel Username_Label;
    private javax.swing.JLabel Verfiy_Contact_Number;
    private javax.swing.JLabel Verify_Business_Location;
    private javax.swing.JLabel Verify_Business_Location_Label;
    private javax.swing.JLabel Verify_Business_Name;
    private javax.swing.JLabel Verify_Business_Name_Label;
    private javax.swing.JLabel Verify_Contact_Number_Label;
    private javax.swing.JPanel Verify_Details;
    private javax.swing.JLabel Verify_Details_Heading;
    private javax.swing.JLabel Verify_Email_Address;
    private javax.swing.JLabel Verify_Email_Address_Label;
    private javax.swing.JLabel Verify_Username;
    private javax.swing.JLabel Verify_Username_Label;
    private javax.swing.JLabel Version_Label;
    private javax.swing.JButton View;
    // End of variables declaration//GEN-END:variables
    private final java.awt.CardLayout Container_Deck;
    private DefaultTableModel Inventory_Model;
    private String usrname, passwd, key;
    private final String Version;
    private boolean LoggedIn;
    private String PID;
}
